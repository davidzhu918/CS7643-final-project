Command Line Args: Namespace(config_file='./detectron2/projects/Panoptic-DeepLab/configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.RESNETS.NORM', 'BN', 'MODEL.INS_EMBED_HEAD.NORM', 'BN', 'MODEL.SEM_SEG_HEAD.NORM', 'BN', 'SOLVER.MAX_ITER', '10000', 'SOLVER.IMS_PER_BATCH', '5', 'SOLVER.BASE_LR', '0.0025', 'MODEL.BACKBONE.FREEZE_AT', '5', 'SOLVER.WEIGHT_DECAY', '0.1'], resume=False)
Loading config ./detectron2/projects/Panoptic-DeepLab/configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv.yaml with yaml.unsafe_load. Your machine may be at risk if the file contains malicious content.
[12/10 23:56:23 detectron2]: Rank of current process: 0. World size: 1
[12/10 23:56:24 detectron2]: Environment info:
----------------------  ----------------------------------------------------------------
sys.platform            linux
Python                  3.7.12 (default, Jan 15 2022, 18:48:18) [GCC 7.5.0]
numpy                   1.21.5
detectron2              0.6 @/content/detectron2/detectron2
Compiler                GCC 7.5
CUDA compiler           CUDA 11.1
detectron2 arch flags   7.0
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.10.0+cu111 @/usr/local/lib/python3.7/dist-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   Tesla V100-SXM2-16GB (arch=7.0)
Driver version          460.32.03
CUDA_HOME               /usr/local/cuda
Pillow                  7.1.2
torchvision             0.11.1+cu111 @/usr/local/lib/python3.7/dist-packages/torchvision
torchvision arch flags  3.5, 5.0, 6.0, 7.0, 7.5, 8.0, 8.6
fvcore                  0.1.5.post20221122
iopath                  0.1.9
cv2                     4.1.2
----------------------  ----------------------------------------------------------------
PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 11.1
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.0.5
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

[12/10 23:56:24 detectron2]: Command line arguments: Namespace(config_file='./detectron2/projects/Panoptic-DeepLab/configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv.yaml', dist_url='tcp://127.0.0.1:49152', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=['MODEL.RESNETS.NORM', 'BN', 'MODEL.INS_EMBED_HEAD.NORM', 'BN', 'MODEL.SEM_SEG_HEAD.NORM', 'BN', 'SOLVER.MAX_ITER', '10000', 'SOLVER.IMS_PER_BATCH', '5', 'SOLVER.BASE_LR', '0.0025', 'MODEL.BACKBONE.FREEZE_AT', '5', 'SOLVER.WEIGHT_DECAY', '0.1'], resume=False)
[12/10 23:56:24 detectron2]: Contents of args.config_file=./detectron2/projects/Panoptic-DeepLab/configs/COCO-PanopticSegmentation/panoptic_deeplab_R_52_os16_mg124_poly_200k_bs64_crop_640_640_coco_dsconv.yaml:
_BASE_: ../Cityscapes-PanopticSegmentation/Base-PanopticDeepLab-OS16.yaml
MODEL:
  WEIGHTS: "detectron2://DeepLab/R-52.pkl"
  PIXEL_MEAN: [123.675, 116.280, 103.530]
  PIXEL_STD: [58.395, 57.120, 57.375]
  BACKBONE:
    NAME: "build_resnet_deeplab_backbone"
  RESNETS:
    DEPTH: 50
    NORM: "SyncBN"
    RES5_MULTI_GRID: [1, 2, 4]
    STEM_TYPE: "deeplab"
    STEM_OUT_CHANNELS: 128
    STRIDE_IN_1X1: False
  SEM_SEG_HEAD:
    NUM_CLASSES: 133
    LOSS_TOP_K: 1.0
    USE_DEPTHWISE_SEPARABLE_CONV: True
  PANOPTIC_DEEPLAB:
    STUFF_AREA: 4096
    NMS_KERNEL: 41
    SIZE_DIVISIBILITY: 640
    USE_DEPTHWISE_SEPARABLE_CONV: True
DATASETS:
  TRAIN: ("coco_2017_train_panoptic",)
  TEST: ("coco_2017_val_panoptic",)
SOLVER:
  BASE_LR: 0.0005
  MAX_ITER: 200000
  IMS_PER_BATCH: 64
INPUT:
  FORMAT: "RGB"
  GAUSSIAN_SIGMA: 8
  MIN_SIZE_TRAIN: !!python/object/apply:eval ["[int(x * 0.1 * 640) for x in range(5, 16)]"]
  MIN_SIZE_TRAIN_SAMPLING: "choice"
  MIN_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 960
  MAX_SIZE_TEST: 640
  CROP:
    ENABLED: True
    TYPE: "absolute"
    SIZE: (640, 640)

[12/10 23:56:24 detectron2]: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 10
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val_panoptic
  TRAIN:
  - coco_2017_train_panoptic
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: true
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 640
    - 640
    TYPE: absolute
  FORMAT: RGB
  GAUSSIAN_SIGMA: 8
  IGNORE_CROWD_IN_SEMANTIC: false
  IGNORE_STUFF_IN_OFFSET: true
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 640
  MAX_SIZE_TRAIN: 960
  MIN_SIZE_TEST: 640
  MIN_SIZE_TRAIN:
  - 320
  - 384
  - 448
  - 512
  - 576
  - 640
  - 704
  - 768
  - 832
  - 896
  - 960
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SMALL_INSTANCE_AREA: 4096
  SMALL_INSTANCE_WEIGHT: 3
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 5
    NAME: build_resnet_deeplab_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  INS_EMBED_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    CENTER_LOSS_WEIGHT: 200.0
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    HEAD_CHANNELS: 32
    IN_FEATURES:
    - res2
    - res3
    - res5
    NAME: PanopticDeepLabInsEmbedHead
    NORM: BN
    OFFSET_LOSS_WEIGHT: 0.01
    PROJECT_CHANNELS:
    - 32
    - 64
    PROJECT_FEATURES:
    - res2
    - res3
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: PanopticDeepLab
  PANOPTIC_DEEPLAB:
    BENCHMARK_NETWORK_SPEED: false
    CENTER_THRESHOLD: 0.1
    NMS_KERNEL: 41
    PREDICT_INSTANCES: true
    SIZE_DIVISIBILITY: 640
    STUFF_AREA: 4096
    TOP_K_INSTANCE: 200
    USE_DEPTHWISE_SEPARABLE_CONV: true
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 123.675
  - 116.28
  - 103.53
  PIXEL_STD:
  - 58.395
  - 57.12
  - 57.375
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: BN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 2
    RES5_MULTI_GRID:
    - 1
    - 2
    - 4
    STEM_OUT_CHANNELS: 128
    STEM_TYPE: deeplab
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id001
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS:
    - 10.0
    - 10.0
    - 5.0
    - 5.0
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    HEAD_CHANNELS: 256
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res5
    LOSS_TOP_K: 1.0
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    NAME: PanopticDeepLabSemSegHead
    NORM: BN
    NUM_CLASSES: 133
    PROJECT_CHANNELS:
    - 32
    - 64
    PROJECT_FEATURES:
    - res2
    - res3
    USE_DEPTHWISE_SEPARABLE_CONV: true
  WEIGHTS: detectron2://DeepLab/R-52.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.0025
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 5
  LR_SCHEDULER_NAME: WarmupPolyLR
  MAX_ITER: 10000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAM
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 30000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.1
  WEIGHT_DECAY_BIAS: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[12/10 23:56:24 detectron2]: Full config saved to ./output/config.yaml
[12/10 23:56:24 d2.utils.env]: Using a generated random seed 24798910
=== ResNet Feeze ===
Resnet stage idx: 2
Resnet stage idx: 3
Resnet stage idx: 4
Resnet stage idx: 5
=== ResNet Feeze ===
Resnet stage idx: 2
Resnet stage idx: 3
Resnet stage idx: 4
Resnet stage idx: 5
[12/10 23:56:28 d2.engine.defaults]: Model:
PanopticDeepLab(
  (backbone): ResNet(
    (stem): DeepLabStem(
      (conv1): Conv2d(
        3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
      (conv2): Conv2d(
        64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
      )
      (conv3): Conv2d(
        64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
      )
    )
    (res2): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv1): Conv2d(
          128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv2): Conv2d(
          64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
        (conv3): Conv2d(
          64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
      )
    )
    (res3): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv1): Conv2d(
          256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv2): Conv2d(
          128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
        )
        (conv3): Conv2d(
          128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
      )
    )
    (res4): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
        (conv1): Conv2d(
          512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (3): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (4): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
      (5): BottleneckBlock(
        (conv1): Conv2d(
          1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
        )
        (conv3): Conv2d(
          256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
        )
      )
    )
    (res5): Sequential(
      (0): BottleneckBlock(
        (shortcut): Conv2d(
          1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
        (conv1): Conv2d(
          1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (1): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
      (2): BottleneckBlock(
        (conv1): Conv2d(
          2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv2): Conv2d(
          512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), bias=False
          (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
        )
        (conv3): Conv2d(
          512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
        )
      )
    )
  )
  (sem_seg_head): PanopticDeepLabSemSegHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            288, 288, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=288, bias=False
            (norm): BatchNorm2d(288, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            288, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(40, 40), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        256, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=256, bias=False
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (predictor): Conv2d(256, 133, kernel_size=(1, 1), stride=(1, 1))
    (loss): DeepLabCE(
      (criterion): CrossEntropyLoss()
    )
  )
  (ins_embed_head): PanopticDeepLabInsEmbedHead(
    (decoder): ModuleDict(
      (res2): ModuleDict(
        (project_conv): Conv2d(
          256, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            160, 160, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=160, bias=False
            (norm): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            160, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res3): ModuleDict(
        (project_conv): Conv2d(
          512, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (fuse_conv): DepthwiseSeparableConv2d(
          (depthwise): Conv2d(
            320, 320, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=320, bias=False
            (norm): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (pointwise): Conv2d(
            320, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
      (res5): ModuleDict(
        (project_conv): ASPP(
          (convs): ModuleList(
            (0): Conv2d(
              2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
              (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (1): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (2): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (3): DepthwiseSeparableConv2d(
              (depthwise): Conv2d(
                2048, 2048, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18), groups=2048, bias=False
                (norm): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
              (pointwise): Conv2d(
                2048, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
                (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (4): Sequential(
              (0): AvgPool2d(kernel_size=(40, 40), stride=1, padding=0)
              (1): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
            )
          )
          (project): Conv2d(
            1280, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (fuse_conv): None
      )
    )
    (center_head): Sequential(
      (0): Conv2d(
        128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (1): Conv2d(
        128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (center_predictor): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
    (offset_head): DepthwiseSeparableConv2d(
      (depthwise): Conv2d(
        128, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), groups=128, bias=False
        (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (pointwise): Conv2d(
        128, 32, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (offset_predictor): Conv2d(32, 2, kernel_size=(1, 1), stride=(1, 1))
    (center_loss): MSELoss()
    (offset_loss): L1Loss()
  )
)
[12/10 23:56:28 d2.projects.panoptic_deeplab.dataset_mapper]: Augmentations used in training: [ResizeShortestEdge(short_edge_length=(320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960), max_size=960, sample_style='choice'), RandomCrop(crop_type='absolute', crop_size=[640, 640]), RandomFlip()]
[12/10 23:56:36 d2.data.build]: Using training sampler TrainingSampler
[12/10 23:56:36 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[12/10 23:56:36 d2.data.common]: Serializing 118287 elements to byte tensors and concatenating them all ...
[12/10 23:56:37 d2.data.common]: Serialized dataset takes 78.29 MiB
/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:481: UserWarning: This DataLoader will create 10 worker processes in total. Our suggested max number of worker in current system is 8, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  cpuset_checked))
[12/10 23:56:40 fvcore.common.checkpoint]: [Checkpointer] Loading from detectron2://DeepLab/R-52.pkl ...
[12/10 23:56:40 fvcore.common.checkpoint]: Reading a file from 'torchvision'
[12/10 23:56:40 d2.checkpoint.c2_model_loading]: Following weights matched with submodule backbone:
| Names in Model    | Names in Checkpoint                                                               | Shapes                                          |
|:------------------|:----------------------------------------------------------------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,128,1,1)            |
| res2.0.conv2.*    | res2.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (256,) (256,) (256,) (256,) (256,128,1,1)       |
| res2.1.conv1.*    | res2.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4.3.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4.3.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4.3.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4.4.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4.4.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4.4.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4.5.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4.5.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4.5.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5.0.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5.0.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5.0.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5.0.shortcut.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight} | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5.1.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5.1.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5.1.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5.2.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5.2.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5.2.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}    | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.*      | stem.conv1.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,3,3,3)              |
| stem.conv2.*      | stem.conv2.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| stem.conv3.*      | stem.conv3.{norm.bias,norm.running_mean,norm.running_var,norm.weight,weight}      | (128,) (128,) (128,) (128,) (128,64,3,3)        |
WARNING [12/10 23:56:41 fvcore.common.checkpoint]: Some model parameters or buffers are not found in the checkpoint:
ins_embed_head.center_head.0.norm.{bias, running_mean, running_var, weight}
ins_embed_head.center_head.0.weight
ins_embed_head.center_head.1.norm.{bias, running_mean, running_var, weight}
ins_embed_head.center_head.1.weight
ins_embed_head.center_predictor.{bias, weight}
ins_embed_head.decoder.res2.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res2.fuse_conv.depthwise.weight
ins_embed_head.decoder.res2.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res2.fuse_conv.pointwise.weight
ins_embed_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res2.project_conv.weight
ins_embed_head.decoder.res3.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res3.fuse_conv.depthwise.weight
ins_embed_head.decoder.res3.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res3.fuse_conv.pointwise.weight
ins_embed_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res3.project_conv.weight
ins_embed_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res5.project_conv.convs.0.weight
ins_embed_head.decoder.res5.project_conv.convs.1.depthwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res5.project_conv.convs.1.depthwise.weight
ins_embed_head.decoder.res5.project_conv.convs.1.pointwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res5.project_conv.convs.1.pointwise.weight
ins_embed_head.decoder.res5.project_conv.convs.2.depthwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res5.project_conv.convs.2.depthwise.weight
ins_embed_head.decoder.res5.project_conv.convs.2.pointwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res5.project_conv.convs.2.pointwise.weight
ins_embed_head.decoder.res5.project_conv.convs.3.depthwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res5.project_conv.convs.3.depthwise.weight
ins_embed_head.decoder.res5.project_conv.convs.3.pointwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res5.project_conv.convs.3.pointwise.weight
ins_embed_head.decoder.res5.project_conv.convs.4.1.{bias, weight}
ins_embed_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}
ins_embed_head.decoder.res5.project_conv.project.weight
ins_embed_head.offset_head.depthwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.offset_head.depthwise.weight
ins_embed_head.offset_head.pointwise.norm.{bias, running_mean, running_var, weight}
ins_embed_head.offset_head.pointwise.weight
ins_embed_head.offset_predictor.{bias, weight}
sem_seg_head.decoder.res2.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res2.fuse_conv.depthwise.weight
sem_seg_head.decoder.res2.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res2.fuse_conv.pointwise.weight
sem_seg_head.decoder.res2.project_conv.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res2.project_conv.weight
sem_seg_head.decoder.res3.fuse_conv.depthwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res3.fuse_conv.depthwise.weight
sem_seg_head.decoder.res3.fuse_conv.pointwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res3.fuse_conv.pointwise.weight
sem_seg_head.decoder.res3.project_conv.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res3.project_conv.weight
sem_seg_head.decoder.res5.project_conv.convs.0.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res5.project_conv.convs.0.weight
sem_seg_head.decoder.res5.project_conv.convs.1.depthwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res5.project_conv.convs.1.depthwise.weight
sem_seg_head.decoder.res5.project_conv.convs.1.pointwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res5.project_conv.convs.1.pointwise.weight
sem_seg_head.decoder.res5.project_conv.convs.2.depthwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res5.project_conv.convs.2.depthwise.weight
sem_seg_head.decoder.res5.project_conv.convs.2.pointwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res5.project_conv.convs.2.pointwise.weight
sem_seg_head.decoder.res5.project_conv.convs.3.depthwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res5.project_conv.convs.3.depthwise.weight
sem_seg_head.decoder.res5.project_conv.convs.3.pointwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res5.project_conv.convs.3.pointwise.weight
sem_seg_head.decoder.res5.project_conv.convs.4.1.{bias, weight}
sem_seg_head.decoder.res5.project_conv.project.norm.{bias, running_mean, running_var, weight}
sem_seg_head.decoder.res5.project_conv.project.weight
sem_seg_head.head.depthwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.head.depthwise.weight
sem_seg_head.head.pointwise.norm.{bias, running_mean, running_var, weight}
sem_seg_head.head.pointwise.weight
sem_seg_head.predictor.{bias, weight}
WARNING [12/10 23:56:41 fvcore.common.checkpoint]: The checkpoint state_dict contains keys that are not used by the model:
  res2.0.conv1.norm.num_batches_tracked
  res2.0.conv2.norm.num_batches_tracked
  res2.0.conv3.norm.num_batches_tracked
  res2.0.shortcut.norm.num_batches_tracked
  res2.1.conv1.norm.num_batches_tracked
  res2.1.conv2.norm.num_batches_tracked
  res2.1.conv3.norm.num_batches_tracked
  res2.2.conv1.norm.num_batches_tracked
  res2.2.conv2.norm.num_batches_tracked
  res2.2.conv3.norm.num_batches_tracked
  res3.0.conv1.norm.num_batches_tracked
  res3.0.conv2.norm.num_batches_tracked
  res3.0.conv3.norm.num_batches_tracked
  res3.0.shortcut.norm.num_batches_tracked
  res3.1.conv1.norm.num_batches_tracked
  res3.1.conv2.norm.num_batches_tracked
  res3.1.conv3.norm.num_batches_tracked
  res3.2.conv1.norm.num_batches_tracked
  res3.2.conv2.norm.num_batches_tracked
  res3.2.conv3.norm.num_batches_tracked
  res3.3.conv1.norm.num_batches_tracked
  res3.3.conv2.norm.num_batches_tracked
  res3.3.conv3.norm.num_batches_tracked
  res4.0.conv1.norm.num_batches_tracked
  res4.0.conv2.norm.num_batches_tracked
  res4.0.conv3.norm.num_batches_tracked
  res4.0.shortcut.norm.num_batches_tracked
  res4.1.conv1.norm.num_batches_tracked
  res4.1.conv2.norm.num_batches_tracked
  res4.1.conv3.norm.num_batches_tracked
  res4.2.conv1.norm.num_batches_tracked
  res4.2.conv2.norm.num_batches_tracked
  res4.2.conv3.norm.num_batches_tracked
  res4.3.conv1.norm.num_batches_tracked
  res4.3.conv2.norm.num_batches_tracked
  res4.3.conv3.norm.num_batches_tracked
  res4.4.conv1.norm.num_batches_tracked
  res4.4.conv2.norm.num_batches_tracked
  res4.4.conv3.norm.num_batches_tracked
  res4.5.conv1.norm.num_batches_tracked
  res4.5.conv2.norm.num_batches_tracked
  res4.5.conv3.norm.num_batches_tracked
  res5.0.conv1.norm.num_batches_tracked
  res5.0.conv2.norm.num_batches_tracked
  res5.0.conv3.norm.num_batches_tracked
  res5.0.shortcut.norm.num_batches_tracked
  res5.1.conv1.norm.num_batches_tracked
  res5.1.conv2.norm.num_batches_tracked
  res5.1.conv3.norm.num_batches_tracked
  res5.2.conv1.norm.num_batches_tracked
  res5.2.conv2.norm.num_batches_tracked
  res5.2.conv3.norm.num_batches_tracked
  stem.conv1.norm.num_batches_tracked
  stem.conv2.norm.num_batches_tracked
  stem.conv3.norm.num_batches_tracked
  stem.fc.{bias, weight}
[12/10 23:56:41 d2.engine.train_loop]: Starting training from iteration 0
/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:481: UserWarning: This DataLoader will create 10 worker processes in total. Our suggested max number of worker in current system is 8, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  cpuset_checked))
[12/10 23:56:47 d2.utils.events]:  eta: 0:44:58  iter: 19  total_loss: 6.413  loss_sem_seg: 3.935  loss_center: 0.7296  loss_offset: 1.786  time: 0.2701  data_time: 0.0686  lr: 4.9867e-05  max_mem: 6513M
[12/10 23:56:52 d2.utils.events]:  eta: 0:44:34  iter: 39  total_loss: 5.812  loss_sem_seg: 3.497  loss_center: 0.6078  loss_offset: 1.604  time: 0.2692  data_time: 0.0240  lr: 9.9552e-05  max_mem: 6513M
[12/10 23:56:58 d2.utils.events]:  eta: 0:44:29  iter: 59  total_loss: 5.952  loss_sem_seg: 3.588  loss_center: 0.6336  loss_offset: 1.702  time: 0.2692  data_time: 0.0249  lr: 0.00014906  max_mem: 6513M
[12/10 23:57:03 d2.utils.events]:  eta: 0:44:34  iter: 79  total_loss: 6.099  loss_sem_seg: 3.951  loss_center: 0.6287  loss_offset: 1.673  time: 0.2698  data_time: 0.0252  lr: 0.00019838  max_mem: 6513M
[12/10 23:57:09 d2.utils.events]:  eta: 0:44:39  iter: 99  total_loss: 5.709  loss_sem_seg: 3.333  loss_center: 0.9261  loss_offset: 1.508  time: 0.2699  data_time: 0.0251  lr: 0.00024753  max_mem: 6513M
[12/10 23:57:14 d2.utils.events]:  eta: 0:44:34  iter: 119  total_loss: 5.272  loss_sem_seg: 3.285  loss_center: 0.5533  loss_offset: 1.559  time: 0.2700  data_time: 0.0254  lr: 0.00029649  max_mem: 6513M
[12/10 23:57:19 d2.utils.events]:  eta: 0:44:15  iter: 139  total_loss: 5.272  loss_sem_seg: 2.946  loss_center: 0.7889  loss_offset: 1.528  time: 0.2694  data_time: 0.0232  lr: 0.00034528  max_mem: 6513M
[12/10 23:57:25 d2.utils.events]:  eta: 0:44:10  iter: 159  total_loss: 5.031  loss_sem_seg: 2.633  loss_center: 0.6898  loss_offset: 1.516  time: 0.2692  data_time: 0.0255  lr: 0.00039388  max_mem: 6513M
[12/10 23:57:30 d2.utils.events]:  eta: 0:44:04  iter: 179  total_loss: 4.935  loss_sem_seg: 2.658  loss_center: 0.9377  loss_offset: 1.316  time: 0.2692  data_time: 0.0245  lr: 0.0004423  max_mem: 6513M
[12/10 23:57:36 d2.utils.events]:  eta: 0:44:01  iter: 199  total_loss: 5.188  loss_sem_seg: 2.874  loss_center: 0.7684  loss_offset: 1.61  time: 0.2692  data_time: 0.0263  lr: 0.00049055  max_mem: 6513M
[12/10 23:57:41 d2.utils.events]:  eta: 0:43:54  iter: 219  total_loss: 4.924  loss_sem_seg: 2.593  loss_center: 0.7923  loss_offset: 1.555  time: 0.2693  data_time: 0.0259  lr: 0.00053861  max_mem: 6513M
[12/10 23:57:46 d2.utils.events]:  eta: 0:43:47  iter: 239  total_loss: 4.988  loss_sem_seg: 2.703  loss_center: 0.6634  loss_offset: 1.434  time: 0.2693  data_time: 0.0236  lr: 0.00058649  max_mem: 6513M
[12/10 23:57:52 d2.utils.events]:  eta: 0:43:40  iter: 259  total_loss: 4.846  loss_sem_seg: 2.387  loss_center: 0.7637  loss_offset: 1.643  time: 0.2692  data_time: 0.0248  lr: 0.0006342  max_mem: 6513M
[12/10 23:57:57 d2.utils.events]:  eta: 0:43:37  iter: 279  total_loss: 5.251  loss_sem_seg: 2.983  loss_center: 0.5522  loss_offset: 1.745  time: 0.2693  data_time: 0.0258  lr: 0.00068172  max_mem: 6513M
[12/10 23:58:03 d2.utils.events]:  eta: 0:43:32  iter: 299  total_loss: 4.837  loss_sem_seg: 2.603  loss_center: 0.6865  loss_offset: 1.568  time: 0.2694  data_time: 0.0257  lr: 0.00072906  max_mem: 6513M
[12/10 23:58:08 d2.utils.events]:  eta: 0:43:27  iter: 319  total_loss: 4.797  loss_sem_seg: 2.506  loss_center: 0.7626  loss_offset: 1.566  time: 0.2694  data_time: 0.0244  lr: 0.00077622  max_mem: 6513M
[12/10 23:58:13 d2.utils.events]:  eta: 0:43:20  iter: 339  total_loss: 4.801  loss_sem_seg: 2.364  loss_center: 0.7342  loss_offset: 1.393  time: 0.2694  data_time: 0.0260  lr: 0.0008232  max_mem: 6513M
[12/10 23:58:19 d2.utils.events]:  eta: 0:43:15  iter: 359  total_loss: 4.859  loss_sem_seg: 2.392  loss_center: 0.7442  loss_offset: 1.431  time: 0.2695  data_time: 0.0259  lr: 0.00087  max_mem: 6513M
[12/10 23:58:24 d2.utils.events]:  eta: 0:43:09  iter: 379  total_loss: 4.735  loss_sem_seg: 2.436  loss_center: 0.7001  loss_offset: 1.595  time: 0.2694  data_time: 0.0244  lr: 0.00091662  max_mem: 6513M
[12/10 23:58:30 d2.utils.events]:  eta: 0:43:04  iter: 399  total_loss: 4.609  loss_sem_seg: 2.377  loss_center: 0.7115  loss_offset: 1.479  time: 0.2693  data_time: 0.0231  lr: 0.00096306  max_mem: 6513M
[12/10 23:58:35 d2.utils.events]:  eta: 0:42:59  iter: 419  total_loss: 4.621  loss_sem_seg: 2.339  loss_center: 0.7366  loss_offset: 1.337  time: 0.2694  data_time: 0.0247  lr: 0.0010093  max_mem: 6513M
[12/10 23:58:40 d2.utils.events]:  eta: 0:42:53  iter: 439  total_loss: 4.446  loss_sem_seg: 2.33  loss_center: 0.7193  loss_offset: 1.447  time: 0.2694  data_time: 0.0257  lr: 0.0010554  max_mem: 6513M
[12/10 23:58:46 d2.utils.events]:  eta: 0:42:48  iter: 459  total_loss: 4.578  loss_sem_seg: 2.331  loss_center: 0.6983  loss_offset: 1.472  time: 0.2694  data_time: 0.0254  lr: 0.0011013  max_mem: 6513M
[12/10 23:58:51 d2.utils.events]:  eta: 0:42:44  iter: 479  total_loss: 4.732  loss_sem_seg: 2.524  loss_center: 0.6263  loss_offset: 1.541  time: 0.2695  data_time: 0.0254  lr: 0.001147  max_mem: 6513M
[12/10 23:58:57 d2.utils.events]:  eta: 0:42:40  iter: 499  total_loss: 4.404  loss_sem_seg: 2.444  loss_center: 0.7332  loss_offset: 1.384  time: 0.2695  data_time: 0.0269  lr: 0.0011925  max_mem: 6513M
[12/10 23:59:02 d2.utils.events]:  eta: 0:42:33  iter: 519  total_loss: 4.757  loss_sem_seg: 2.368  loss_center: 0.553  loss_offset: 1.58  time: 0.2694  data_time: 0.0231  lr: 0.0012379  max_mem: 6513M
[12/10 23:59:07 d2.utils.events]:  eta: 0:42:31  iter: 539  total_loss: 4.74  loss_sem_seg: 2.476  loss_center: 0.7614  loss_offset: 1.371  time: 0.2695  data_time: 0.0259  lr: 0.001283  max_mem: 6513M
[12/10 23:59:13 d2.utils.events]:  eta: 0:42:25  iter: 559  total_loss: 4.229  loss_sem_seg: 2.272  loss_center: 0.6606  loss_offset: 1.344  time: 0.2696  data_time: 0.0263  lr: 0.001328  max_mem: 6513M
[12/10 23:59:18 d2.utils.events]:  eta: 0:42:22  iter: 579  total_loss: 4.802  loss_sem_seg: 2.534  loss_center: 0.6146  loss_offset: 1.563  time: 0.2696  data_time: 0.0260  lr: 0.0013728  max_mem: 6513M
[12/10 23:59:24 d2.utils.events]:  eta: 0:42:15  iter: 599  total_loss: 4.357  loss_sem_seg: 2.253  loss_center: 0.6373  loss_offset: 1.36  time: 0.2696  data_time: 0.0235  lr: 0.0014175  max_mem: 6513M
[12/10 23:59:29 d2.utils.events]:  eta: 0:42:11  iter: 619  total_loss: 4.557  loss_sem_seg: 2.248  loss_center: 1.141  loss_offset: 1.325  time: 0.2696  data_time: 0.0260  lr: 0.0014619  max_mem: 6513M
[12/10 23:59:35 d2.utils.events]:  eta: 0:42:04  iter: 639  total_loss: 4.45  loss_sem_seg: 2.586  loss_center: 0.7908  loss_offset: 1.366  time: 0.2696  data_time: 0.0260  lr: 0.0015062  max_mem: 6513M
[12/10 23:59:40 d2.utils.events]:  eta: 0:41:57  iter: 659  total_loss: 4.802  loss_sem_seg: 2.435  loss_center: 0.5845  loss_offset: 1.469  time: 0.2696  data_time: 0.0238  lr: 0.0015503  max_mem: 6513M
[12/10 23:59:45 d2.utils.events]:  eta: 0:41:52  iter: 679  total_loss: 4.644  loss_sem_seg: 2.419  loss_center: 0.6649  loss_offset: 1.361  time: 0.2697  data_time: 0.0257  lr: 0.0015942  max_mem: 6513M
[12/10 23:59:51 d2.utils.events]:  eta: 0:41:46  iter: 699  total_loss: 4.794  loss_sem_seg: 2.762  loss_center: 0.6364  loss_offset: 1.349  time: 0.2696  data_time: 0.0232  lr: 0.0016379  max_mem: 6513M
[12/10 23:59:56 d2.utils.events]:  eta: 0:41:40  iter: 719  total_loss: 4.73  loss_sem_seg: 2.615  loss_center: 0.7906  loss_offset: 1.391  time: 0.2695  data_time: 0.0248  lr: 0.0016814  max_mem: 6513M
[12/11 00:00:01 d2.utils.events]:  eta: 0:41:34  iter: 739  total_loss: 4.538  loss_sem_seg: 2.465  loss_center: 0.6711  loss_offset: 1.463  time: 0.2695  data_time: 0.0260  lr: 0.0017248  max_mem: 6513M
[12/11 00:00:07 d2.utils.events]:  eta: 0:41:29  iter: 759  total_loss: 4.729  loss_sem_seg: 2.63  loss_center: 0.7796  loss_offset: 1.238  time: 0.2695  data_time: 0.0243  lr: 0.0017679  max_mem: 6513M
[12/11 00:00:12 d2.utils.events]:  eta: 0:41:23  iter: 779  total_loss: 5.01  loss_sem_seg: 2.762  loss_center: 0.8359  loss_offset: 1.394  time: 0.2695  data_time: 0.0259  lr: 0.0018109  max_mem: 6513M
[12/11 00:00:18 d2.utils.events]:  eta: 0:41:18  iter: 799  total_loss: 4.635  loss_sem_seg: 2.399  loss_center: 0.6945  loss_offset: 1.363  time: 0.2695  data_time: 0.0248  lr: 0.0018537  max_mem: 6513M
[12/11 00:00:23 d2.utils.events]:  eta: 0:41:12  iter: 819  total_loss: 4.676  loss_sem_seg: 2.581  loss_center: 0.7558  loss_offset: 1.331  time: 0.2695  data_time: 0.0246  lr: 0.0018964  max_mem: 6513M
[12/11 00:00:28 d2.utils.events]:  eta: 0:41:07  iter: 839  total_loss: 4.709  loss_sem_seg: 2.559  loss_center: 0.7069  loss_offset: 1.392  time: 0.2695  data_time: 0.0254  lr: 0.0019388  max_mem: 6513M
[12/11 00:00:34 d2.utils.events]:  eta: 0:41:02  iter: 859  total_loss: 4.763  loss_sem_seg: 2.552  loss_center: 0.6294  loss_offset: 1.493  time: 0.2695  data_time: 0.0244  lr: 0.0019811  max_mem: 6513M
[12/11 00:00:39 d2.utils.events]:  eta: 0:40:57  iter: 879  total_loss: 5.269  loss_sem_seg: 2.945  loss_center: 0.7432  loss_offset: 1.615  time: 0.2696  data_time: 0.0258  lr: 0.0020231  max_mem: 6513M
[12/11 00:00:45 d2.utils.events]:  eta: 0:40:52  iter: 899  total_loss: 4.662  loss_sem_seg: 2.496  loss_center: 0.7436  loss_offset: 1.38  time: 0.2696  data_time: 0.0257  lr: 0.002065  max_mem: 6513M
[12/11 00:00:50 d2.utils.events]:  eta: 0:40:47  iter: 919  total_loss: 4.819  loss_sem_seg: 2.886  loss_center: 0.5866  loss_offset: 1.581  time: 0.2697  data_time: 0.0264  lr: 0.0021068  max_mem: 6513M
[12/11 00:00:56 d2.utils.events]:  eta: 0:40:42  iter: 939  total_loss: 4.881  loss_sem_seg: 2.633  loss_center: 0.7384  loss_offset: 1.45  time: 0.2697  data_time: 0.0251  lr: 0.0021483  max_mem: 6513M
[12/11 00:01:01 d2.utils.events]:  eta: 0:40:36  iter: 959  total_loss: 5.11  loss_sem_seg: 2.889  loss_center: 0.6599  loss_offset: 1.505  time: 0.2697  data_time: 0.0262  lr: 0.0021896  max_mem: 6513M
[12/11 00:01:06 d2.utils.events]:  eta: 0:40:30  iter: 979  total_loss: 4.87  loss_sem_seg: 2.619  loss_center: 0.705  loss_offset: 1.348  time: 0.2697  data_time: 0.0255  lr: 0.0022308  max_mem: 6513M
[12/11 00:01:12 d2.utils.events]:  eta: 0:40:26  iter: 999  total_loss: 5.094  loss_sem_seg: 2.842  loss_center: 0.6818  loss_offset: 1.48  time: 0.2697  data_time: 0.0259  lr: 0.0022718  max_mem: 6513M
[12/11 00:01:17 d2.utils.events]:  eta: 0:40:21  iter: 1019  total_loss: 4.756  loss_sem_seg: 2.577  loss_center: 0.6461  loss_offset: 1.391  time: 0.2698  data_time: 0.0256  lr: 0.0022695  max_mem: 6513M
[12/11 00:01:23 d2.utils.events]:  eta: 0:40:16  iter: 1039  total_loss: 4.821  loss_sem_seg: 2.798  loss_center: 0.756  loss_offset: 1.294  time: 0.2698  data_time: 0.0250  lr: 0.002265  max_mem: 6513M
[12/11 00:01:28 d2.utils.events]:  eta: 0:40:10  iter: 1059  total_loss: 4.957  loss_sem_seg: 2.792  loss_center: 0.5813  loss_offset: 1.606  time: 0.2698  data_time: 0.0247  lr: 0.0022604  max_mem: 6513M
[12/11 00:01:34 d2.utils.events]:  eta: 0:40:05  iter: 1079  total_loss: 5.001  loss_sem_seg: 2.778  loss_center: 0.6486  loss_offset: 1.495  time: 0.2698  data_time: 0.0259  lr: 0.0022559  max_mem: 6513M
[12/11 00:01:39 d2.utils.events]:  eta: 0:39:59  iter: 1099  total_loss: 5.009  loss_sem_seg: 2.854  loss_center: 0.6873  loss_offset: 1.188  time: 0.2699  data_time: 0.0253  lr: 0.0022513  max_mem: 6513M
[12/11 00:01:44 d2.utils.events]:  eta: 0:39:54  iter: 1119  total_loss: 4.858  loss_sem_seg: 2.817  loss_center: 0.6352  loss_offset: 1.482  time: 0.2699  data_time: 0.0259  lr: 0.0022468  max_mem: 6513M
[12/11 00:01:50 d2.utils.events]:  eta: 0:39:49  iter: 1139  total_loss: 5.145  loss_sem_seg: 2.815  loss_center: 0.6805  loss_offset: 1.56  time: 0.2699  data_time: 0.0252  lr: 0.0022422  max_mem: 6513M
[12/11 00:01:55 d2.utils.events]:  eta: 0:39:44  iter: 1159  total_loss: 4.893  loss_sem_seg: 2.633  loss_center: 0.7001  loss_offset: 1.366  time: 0.2699  data_time: 0.0258  lr: 0.0022376  max_mem: 6513M
[12/11 00:02:01 d2.utils.events]:  eta: 0:39:38  iter: 1179  total_loss: 4.874  loss_sem_seg: 2.764  loss_center: 0.6765  loss_offset: 1.385  time: 0.2699  data_time: 0.0249  lr: 0.0022331  max_mem: 6513M
[12/11 00:02:06 d2.utils.events]:  eta: 0:39:33  iter: 1199  total_loss: 4.683  loss_sem_seg: 2.56  loss_center: 0.5737  loss_offset: 1.336  time: 0.2699  data_time: 0.0260  lr: 0.0022285  max_mem: 6513M
[12/11 00:02:11 d2.utils.events]:  eta: 0:39:28  iter: 1219  total_loss: 4.872  loss_sem_seg: 2.84  loss_center: 0.6688  loss_offset: 1.403  time: 0.2699  data_time: 0.0251  lr: 0.002224  max_mem: 6513M
[12/11 00:02:17 d2.utils.events]:  eta: 0:39:24  iter: 1239  total_loss: 4.952  loss_sem_seg: 2.57  loss_center: 0.7312  loss_offset: 1.547  time: 0.2699  data_time: 0.0260  lr: 0.0022194  max_mem: 6513M
[12/11 00:02:22 d2.utils.events]:  eta: 0:39:20  iter: 1259  total_loss: 4.841  loss_sem_seg: 2.623  loss_center: 0.6412  loss_offset: 1.496  time: 0.2699  data_time: 0.0262  lr: 0.0022149  max_mem: 6513M
[12/11 00:02:28 d2.utils.events]:  eta: 0:39:14  iter: 1279  total_loss: 4.621  loss_sem_seg: 2.422  loss_center: 0.4935  loss_offset: 1.334  time: 0.2699  data_time: 0.0242  lr: 0.0022103  max_mem: 6513M
[12/11 00:02:33 d2.utils.events]:  eta: 0:39:10  iter: 1299  total_loss: 4.977  loss_sem_seg: 2.845  loss_center: 0.7176  loss_offset: 1.374  time: 0.2700  data_time: 0.0277  lr: 0.0022057  max_mem: 6513M
[12/11 00:02:39 d2.utils.events]:  eta: 0:39:04  iter: 1319  total_loss: 4.986  loss_sem_seg: 2.719  loss_center: 0.8011  loss_offset: 1.349  time: 0.2700  data_time: 0.0252  lr: 0.0022012  max_mem: 6513M
[12/11 00:02:44 d2.utils.events]:  eta: 0:38:59  iter: 1339  total_loss: 4.66  loss_sem_seg: 2.461  loss_center: 0.9492  loss_offset: 1.365  time: 0.2700  data_time: 0.0251  lr: 0.0021966  max_mem: 6513M
[12/11 00:02:50 d2.utils.events]:  eta: 0:38:54  iter: 1359  total_loss: 5.152  loss_sem_seg: 2.877  loss_center: 0.6797  loss_offset: 1.399  time: 0.2700  data_time: 0.0283  lr: 0.002192  max_mem: 6513M
[12/11 00:02:55 d2.utils.events]:  eta: 0:38:50  iter: 1379  total_loss: 4.933  loss_sem_seg: 2.702  loss_center: 0.6915  loss_offset: 1.299  time: 0.2701  data_time: 0.0273  lr: 0.0021875  max_mem: 6513M
[12/11 00:03:01 d2.utils.events]:  eta: 0:38:45  iter: 1399  total_loss: 4.648  loss_sem_seg: 2.663  loss_center: 0.8231  loss_offset: 1.367  time: 0.2701  data_time: 0.0254  lr: 0.0021829  max_mem: 6513M
[12/11 00:03:06 d2.utils.events]:  eta: 0:38:40  iter: 1419  total_loss: 4.756  loss_sem_seg: 2.571  loss_center: 0.7153  loss_offset: 1.45  time: 0.2701  data_time: 0.0269  lr: 0.0021783  max_mem: 6513M
[12/11 00:03:11 d2.utils.events]:  eta: 0:38:35  iter: 1439  total_loss: 4.628  loss_sem_seg: 2.753  loss_center: 0.5546  loss_offset: 1.28  time: 0.2701  data_time: 0.0251  lr: 0.0021738  max_mem: 6513M
[12/11 00:03:17 d2.utils.events]:  eta: 0:38:29  iter: 1459  total_loss: 5  loss_sem_seg: 2.623  loss_center: 0.6413  loss_offset: 1.58  time: 0.2701  data_time: 0.0250  lr: 0.0021692  max_mem: 6513M
[12/11 00:03:22 d2.utils.events]:  eta: 0:38:22  iter: 1479  total_loss: 4.708  loss_sem_seg: 2.465  loss_center: 0.7851  loss_offset: 1.393  time: 0.2701  data_time: 0.0255  lr: 0.0021646  max_mem: 6513M
[12/11 00:03:28 d2.utils.events]:  eta: 0:38:16  iter: 1499  total_loss: 4.776  loss_sem_seg: 2.632  loss_center: 0.6366  loss_offset: 1.268  time: 0.2701  data_time: 0.0263  lr: 0.00216  max_mem: 6513M
[12/11 00:03:33 d2.utils.events]:  eta: 0:38:12  iter: 1519  total_loss: 4.782  loss_sem_seg: 2.471  loss_center: 0.786  loss_offset: 1.29  time: 0.2701  data_time: 0.0249  lr: 0.0021555  max_mem: 6513M
[12/11 00:03:38 d2.utils.events]:  eta: 0:38:05  iter: 1539  total_loss: 4.846  loss_sem_seg: 2.758  loss_center: 0.7815  loss_offset: 1.318  time: 0.2702  data_time: 0.0255  lr: 0.0021509  max_mem: 6513M
[12/11 00:03:44 d2.utils.events]:  eta: 0:38:00  iter: 1559  total_loss: 4.602  loss_sem_seg: 2.466  loss_center: 0.9382  loss_offset: 1.278  time: 0.2702  data_time: 0.0244  lr: 0.0021463  max_mem: 6513M
[12/11 00:03:49 d2.utils.events]:  eta: 0:37:54  iter: 1579  total_loss: 4.52  loss_sem_seg: 2.515  loss_center: 0.7435  loss_offset: 1.307  time: 0.2702  data_time: 0.0262  lr: 0.0021417  max_mem: 6513M
[12/11 00:03:55 d2.utils.events]:  eta: 0:37:49  iter: 1599  total_loss: 5.069  loss_sem_seg: 2.78  loss_center: 0.5895  loss_offset: 1.507  time: 0.2702  data_time: 0.0242  lr: 0.0021372  max_mem: 6513M
[12/11 00:04:00 d2.utils.events]:  eta: 0:37:42  iter: 1619  total_loss: 4.258  loss_sem_seg: 2.293  loss_center: 0.9906  loss_offset: 1.253  time: 0.2701  data_time: 0.0239  lr: 0.0021326  max_mem: 6513M
[12/11 00:04:05 d2.utils.events]:  eta: 0:37:37  iter: 1639  total_loss: 4.841  loss_sem_seg: 2.618  loss_center: 0.7787  loss_offset: 1.404  time: 0.2701  data_time: 0.0250  lr: 0.002128  max_mem: 6513M
[12/11 00:04:11 d2.utils.events]:  eta: 0:37:31  iter: 1659  total_loss: 4.632  loss_sem_seg: 2.619  loss_center: 0.7687  loss_offset: 1.334  time: 0.2701  data_time: 0.0246  lr: 0.0021234  max_mem: 6513M
[12/11 00:04:16 d2.utils.events]:  eta: 0:37:26  iter: 1679  total_loss: 4.598  loss_sem_seg: 2.481  loss_center: 0.7036  loss_offset: 1.4  time: 0.2700  data_time: 0.0244  lr: 0.0021188  max_mem: 6513M
[12/11 00:04:22 d2.utils.events]:  eta: 0:37:21  iter: 1699  total_loss: 4.722  loss_sem_seg: 2.667  loss_center: 0.6984  loss_offset: 1.291  time: 0.2701  data_time: 0.0250  lr: 0.0021143  max_mem: 6513M
[12/11 00:04:27 d2.utils.events]:  eta: 0:37:17  iter: 1719  total_loss: 4.891  loss_sem_seg: 2.748  loss_center: 0.6267  loss_offset: 1.419  time: 0.2701  data_time: 0.0272  lr: 0.0021097  max_mem: 6513M
[12/11 00:04:33 d2.utils.events]:  eta: 0:37:12  iter: 1739  total_loss: 4.466  loss_sem_seg: 2.596  loss_center: 0.6646  loss_offset: 1.256  time: 0.2701  data_time: 0.0259  lr: 0.0021051  max_mem: 6513M
[12/11 00:04:38 d2.utils.events]:  eta: 0:37:07  iter: 1759  total_loss: 4.627  loss_sem_seg: 2.554  loss_center: 0.756  loss_offset: 1.212  time: 0.2702  data_time: 0.0267  lr: 0.0021005  max_mem: 6513M
[12/11 00:04:43 d2.utils.events]:  eta: 0:37:03  iter: 1779  total_loss: 4.648  loss_sem_seg: 2.622  loss_center: 0.7543  loss_offset: 1.294  time: 0.2702  data_time: 0.0274  lr: 0.0020959  max_mem: 6513M
[12/11 00:04:49 d2.utils.events]:  eta: 0:36:57  iter: 1799  total_loss: 4.691  loss_sem_seg: 2.609  loss_center: 0.744  loss_offset: 1.291  time: 0.2702  data_time: 0.0268  lr: 0.0020913  max_mem: 6513M
[12/11 00:04:54 d2.utils.events]:  eta: 0:36:52  iter: 1819  total_loss: 4.673  loss_sem_seg: 2.605  loss_center: 0.5934  loss_offset: 1.393  time: 0.2702  data_time: 0.0243  lr: 0.0020867  max_mem: 6513M
[12/11 00:05:00 d2.utils.events]:  eta: 0:36:46  iter: 1839  total_loss: 4.482  loss_sem_seg: 2.384  loss_center: 0.6596  loss_offset: 1.464  time: 0.2702  data_time: 0.0255  lr: 0.0020821  max_mem: 6513M
[12/11 00:05:05 d2.utils.events]:  eta: 0:36:40  iter: 1859  total_loss: 5.007  loss_sem_seg: 2.846  loss_center: 0.654  loss_offset: 1.377  time: 0.2702  data_time: 0.0264  lr: 0.0020775  max_mem: 6513M
[12/11 00:05:11 d2.utils.events]:  eta: 0:36:34  iter: 1879  total_loss: 4.637  loss_sem_seg: 2.357  loss_center: 0.7466  loss_offset: 1.552  time: 0.2702  data_time: 0.0265  lr: 0.0020729  max_mem: 6513M
[12/11 00:05:16 d2.utils.events]:  eta: 0:36:28  iter: 1899  total_loss: 5.179  loss_sem_seg: 2.879  loss_center: 0.6036  loss_offset: 1.714  time: 0.2702  data_time: 0.0238  lr: 0.0020684  max_mem: 6513M
[12/11 00:05:21 d2.utils.events]:  eta: 0:36:23  iter: 1919  total_loss: 4.794  loss_sem_seg: 2.748  loss_center: 0.6259  loss_offset: 1.308  time: 0.2702  data_time: 0.0280  lr: 0.0020638  max_mem: 6513M
[12/11 00:05:27 d2.utils.events]:  eta: 0:36:17  iter: 1939  total_loss: 4.862  loss_sem_seg: 2.692  loss_center: 0.7152  loss_offset: 1.56  time: 0.2702  data_time: 0.0240  lr: 0.0020592  max_mem: 6513M
[12/11 00:05:32 d2.utils.events]:  eta: 0:36:12  iter: 1959  total_loss: 4.583  loss_sem_seg: 2.322  loss_center: 0.7487  loss_offset: 1.464  time: 0.2702  data_time: 0.0270  lr: 0.0020546  max_mem: 6513M
[12/11 00:05:38 d2.utils.events]:  eta: 0:36:08  iter: 1979  total_loss: 4.954  loss_sem_seg: 2.468  loss_center: 0.7805  loss_offset: 1.31  time: 0.2702  data_time: 0.0259  lr: 0.00205  max_mem: 6513M
[12/11 00:05:43 d2.utils.events]:  eta: 0:36:02  iter: 1999  total_loss: 5.126  loss_sem_seg: 2.729  loss_center: 0.6853  loss_offset: 1.699  time: 0.2702  data_time: 0.0253  lr: 0.0020454  max_mem: 6513M
[12/11 00:05:49 d2.utils.events]:  eta: 0:35:56  iter: 2019  total_loss: 4.77  loss_sem_seg: 2.788  loss_center: 0.6882  loss_offset: 1.335  time: 0.2703  data_time: 0.0263  lr: 0.0020408  max_mem: 6513M
[12/11 00:05:54 d2.utils.events]:  eta: 0:35:51  iter: 2039  total_loss: 4.609  loss_sem_seg: 2.573  loss_center: 0.6291  loss_offset: 1.429  time: 0.2703  data_time: 0.0270  lr: 0.0020362  max_mem: 6513M
[12/11 00:05:59 d2.utils.events]:  eta: 0:35:46  iter: 2059  total_loss: 4.558  loss_sem_seg: 2.575  loss_center: 0.7269  loss_offset: 1.177  time: 0.2703  data_time: 0.0248  lr: 0.0020316  max_mem: 6513M
[12/11 00:06:05 d2.utils.events]:  eta: 0:35:41  iter: 2079  total_loss: 4.278  loss_sem_seg: 2.204  loss_center: 0.7361  loss_offset: 1.367  time: 0.2703  data_time: 0.0249  lr: 0.0020269  max_mem: 6513M
[12/11 00:06:10 d2.utils.events]:  eta: 0:35:36  iter: 2099  total_loss: 4.836  loss_sem_seg: 2.655  loss_center: 0.8066  loss_offset: 1.325  time: 0.2704  data_time: 0.0272  lr: 0.0020223  max_mem: 6513M
[12/11 00:06:16 d2.utils.events]:  eta: 0:35:30  iter: 2119  total_loss: 4.515  loss_sem_seg: 2.71  loss_center: 0.6754  loss_offset: 1.308  time: 0.2704  data_time: 0.0262  lr: 0.0020177  max_mem: 6513M
[12/11 00:06:21 d2.utils.events]:  eta: 0:35:25  iter: 2139  total_loss: 4.461  loss_sem_seg: 2.322  loss_center: 0.6879  loss_offset: 1.311  time: 0.2704  data_time: 0.0266  lr: 0.0020131  max_mem: 6513M
[12/11 00:06:27 d2.utils.events]:  eta: 0:35:19  iter: 2159  total_loss: 4.515  loss_sem_seg: 2.418  loss_center: 0.6753  loss_offset: 1.476  time: 0.2704  data_time: 0.0258  lr: 0.0020085  max_mem: 6513M
[12/11 00:06:32 d2.utils.events]:  eta: 0:35:15  iter: 2179  total_loss: 4.542  loss_sem_seg: 2.469  loss_center: 0.7703  loss_offset: 1.198  time: 0.2704  data_time: 0.0257  lr: 0.0020039  max_mem: 6513M
[12/11 00:06:38 d2.utils.events]:  eta: 0:35:09  iter: 2199  total_loss: 4.515  loss_sem_seg: 2.536  loss_center: 0.6936  loss_offset: 1.38  time: 0.2704  data_time: 0.0271  lr: 0.0019993  max_mem: 6513M
[12/11 00:06:43 d2.utils.events]:  eta: 0:35:03  iter: 2219  total_loss: 4.391  loss_sem_seg: 2.551  loss_center: 0.687  loss_offset: 1.221  time: 0.2704  data_time: 0.0257  lr: 0.0019947  max_mem: 6513M
[12/11 00:06:49 d2.utils.events]:  eta: 0:34:58  iter: 2239  total_loss: 4.954  loss_sem_seg: 2.471  loss_center: 0.7856  loss_offset: 1.494  time: 0.2705  data_time: 0.0273  lr: 0.0019901  max_mem: 6513M
[12/11 00:06:54 d2.utils.events]:  eta: 0:34:52  iter: 2259  total_loss: 4.597  loss_sem_seg: 2.45  loss_center: 0.6628  loss_offset: 1.207  time: 0.2705  data_time: 0.0265  lr: 0.0019854  max_mem: 6513M
[12/11 00:06:59 d2.utils.events]:  eta: 0:34:47  iter: 2279  total_loss: 4.801  loss_sem_seg: 2.709  loss_center: 0.7119  loss_offset: 1.402  time: 0.2705  data_time: 0.0248  lr: 0.0019808  max_mem: 6513M
[12/11 00:07:05 d2.utils.events]:  eta: 0:34:40  iter: 2299  total_loss: 4.618  loss_sem_seg: 2.574  loss_center: 0.793  loss_offset: 1.37  time: 0.2704  data_time: 0.0256  lr: 0.0019762  max_mem: 6513M
[12/11 00:07:10 d2.utils.events]:  eta: 0:34:35  iter: 2319  total_loss: 4.568  loss_sem_seg: 2.534  loss_center: 0.7144  loss_offset: 1.281  time: 0.2704  data_time: 0.0257  lr: 0.0019716  max_mem: 6513M
[12/11 00:07:16 d2.utils.events]:  eta: 0:34:30  iter: 2339  total_loss: 4.712  loss_sem_seg: 2.456  loss_center: 0.7376  loss_offset: 1.565  time: 0.2704  data_time: 0.0267  lr: 0.001967  max_mem: 6513M
[12/11 00:07:21 d2.utils.events]:  eta: 0:34:24  iter: 2359  total_loss: 4.745  loss_sem_seg: 2.463  loss_center: 0.8595  loss_offset: 1.373  time: 0.2704  data_time: 0.0263  lr: 0.0019623  max_mem: 6513M
[12/11 00:07:26 d2.utils.events]:  eta: 0:34:18  iter: 2379  total_loss: 4.864  loss_sem_seg: 2.477  loss_center: 0.675  loss_offset: 1.417  time: 0.2704  data_time: 0.0275  lr: 0.0019577  max_mem: 6513M
[12/11 00:07:32 d2.utils.events]:  eta: 0:34:13  iter: 2399  total_loss: 5.123  loss_sem_seg: 2.757  loss_center: 0.825  loss_offset: 1.535  time: 0.2705  data_time: 0.0292  lr: 0.0019531  max_mem: 6513M
[12/11 00:07:37 d2.utils.events]:  eta: 0:34:08  iter: 2419  total_loss: 4.901  loss_sem_seg: 2.706  loss_center: 0.7955  loss_offset: 1.551  time: 0.2705  data_time: 0.0256  lr: 0.0019485  max_mem: 6513M
[12/11 00:07:43 d2.utils.events]:  eta: 0:34:03  iter: 2439  total_loss: 4.666  loss_sem_seg: 2.631  loss_center: 0.6709  loss_offset: 1.255  time: 0.2705  data_time: 0.0254  lr: 0.0019438  max_mem: 6513M
[12/11 00:07:48 d2.utils.events]:  eta: 0:33:58  iter: 2459  total_loss: 4.504  loss_sem_seg: 2.428  loss_center: 0.6538  loss_offset: 1.413  time: 0.2705  data_time: 0.0259  lr: 0.0019392  max_mem: 6513M
[12/11 00:07:54 d2.utils.events]:  eta: 0:33:53  iter: 2479  total_loss: 4.491  loss_sem_seg: 2.503  loss_center: 0.5618  loss_offset: 1.394  time: 0.2706  data_time: 0.0267  lr: 0.0019346  max_mem: 6513M
[12/11 00:07:59 d2.utils.events]:  eta: 0:33:48  iter: 2499  total_loss: 4.829  loss_sem_seg: 2.624  loss_center: 0.6989  loss_offset: 1.463  time: 0.2706  data_time: 0.0254  lr: 0.00193  max_mem: 6513M
[12/11 00:08:05 d2.utils.events]:  eta: 0:33:42  iter: 2519  total_loss: 4.485  loss_sem_seg: 2.516  loss_center: 0.6495  loss_offset: 1.233  time: 0.2706  data_time: 0.0271  lr: 0.0019253  max_mem: 6513M
[12/11 00:08:10 d2.utils.events]:  eta: 0:33:37  iter: 2539  total_loss: 4.713  loss_sem_seg: 2.661  loss_center: 0.8252  loss_offset: 1.31  time: 0.2705  data_time: 0.0247  lr: 0.0019207  max_mem: 6513M
[12/11 00:08:16 d2.utils.events]:  eta: 0:33:31  iter: 2559  total_loss: 4.939  loss_sem_seg: 2.557  loss_center: 0.8691  loss_offset: 1.432  time: 0.2705  data_time: 0.0256  lr: 0.0019161  max_mem: 6513M
[12/11 00:08:21 d2.utils.events]:  eta: 0:33:25  iter: 2579  total_loss: 4.774  loss_sem_seg: 2.52  loss_center: 0.8379  loss_offset: 1.475  time: 0.2705  data_time: 0.0261  lr: 0.0019114  max_mem: 6513M
[12/11 00:08:26 d2.utils.events]:  eta: 0:33:20  iter: 2599  total_loss: 4.911  loss_sem_seg: 2.554  loss_center: 0.7385  loss_offset: 1.418  time: 0.2705  data_time: 0.0258  lr: 0.0019068  max_mem: 6513M
[12/11 00:08:32 d2.utils.events]:  eta: 0:33:16  iter: 2619  total_loss: 4.579  loss_sem_seg: 2.608  loss_center: 0.7562  loss_offset: 1.322  time: 0.2705  data_time: 0.0245  lr: 0.0019021  max_mem: 6513M
[12/11 00:08:37 d2.utils.events]:  eta: 0:33:10  iter: 2639  total_loss: 4.78  loss_sem_seg: 2.673  loss_center: 0.685  loss_offset: 1.461  time: 0.2706  data_time: 0.0258  lr: 0.0018975  max_mem: 6513M
[12/11 00:08:43 d2.utils.events]:  eta: 0:33:04  iter: 2659  total_loss: 4.631  loss_sem_seg: 2.476  loss_center: 0.7857  loss_offset: 1.248  time: 0.2705  data_time: 0.0248  lr: 0.0018929  max_mem: 6513M
[12/11 00:08:48 d2.utils.events]:  eta: 0:32:59  iter: 2679  total_loss: 4.741  loss_sem_seg: 2.369  loss_center: 0.6898  loss_offset: 1.389  time: 0.2705  data_time: 0.0253  lr: 0.0018882  max_mem: 6513M
[12/11 00:08:53 d2.utils.events]:  eta: 0:32:53  iter: 2699  total_loss: 4.949  loss_sem_seg: 2.53  loss_center: 0.6628  loss_offset: 1.481  time: 0.2705  data_time: 0.0254  lr: 0.0018836  max_mem: 6513M
[12/11 00:08:59 d2.utils.events]:  eta: 0:32:47  iter: 2719  total_loss: 4.679  loss_sem_seg: 2.518  loss_center: 0.6877  loss_offset: 1.24  time: 0.2705  data_time: 0.0273  lr: 0.0018789  max_mem: 6513M
[12/11 00:09:04 d2.utils.events]:  eta: 0:32:41  iter: 2739  total_loss: 4.512  loss_sem_seg: 2.281  loss_center: 0.6742  loss_offset: 1.299  time: 0.2705  data_time: 0.0246  lr: 0.0018743  max_mem: 6513M
[12/11 00:09:10 d2.utils.events]:  eta: 0:32:35  iter: 2759  total_loss: 4.57  loss_sem_seg: 2.502  loss_center: 0.6639  loss_offset: 1.314  time: 0.2705  data_time: 0.0276  lr: 0.0018696  max_mem: 6513M
[12/11 00:09:15 d2.utils.events]:  eta: 0:32:29  iter: 2779  total_loss: 4.574  loss_sem_seg: 2.418  loss_center: 0.8003  loss_offset: 1.217  time: 0.2706  data_time: 0.0277  lr: 0.001865  max_mem: 6513M
[12/11 00:09:21 d2.utils.events]:  eta: 0:32:24  iter: 2799  total_loss: 4.428  loss_sem_seg: 2.55  loss_center: 0.4688  loss_offset: 1.376  time: 0.2706  data_time: 0.0284  lr: 0.0018603  max_mem: 6513M
[12/11 00:09:26 d2.utils.events]:  eta: 0:32:19  iter: 2819  total_loss: 4.679  loss_sem_seg: 2.59  loss_center: 0.6874  loss_offset: 1.3  time: 0.2706  data_time: 0.0249  lr: 0.0018557  max_mem: 6513M
[12/11 00:09:31 d2.utils.events]:  eta: 0:32:13  iter: 2839  total_loss: 4.404  loss_sem_seg: 2.267  loss_center: 0.7082  loss_offset: 1.307  time: 0.2706  data_time: 0.0258  lr: 0.001851  max_mem: 6513M
[12/11 00:09:37 d2.utils.events]:  eta: 0:32:09  iter: 2859  total_loss: 5.029  loss_sem_seg: 2.583  loss_center: 0.7506  loss_offset: 1.415  time: 0.2706  data_time: 0.0276  lr: 0.0018464  max_mem: 6513M
[12/11 00:09:42 d2.utils.events]:  eta: 0:32:03  iter: 2879  total_loss: 4.83  loss_sem_seg: 2.519  loss_center: 0.5665  loss_offset: 1.451  time: 0.2706  data_time: 0.0255  lr: 0.0018417  max_mem: 6513M
[12/11 00:09:48 d2.utils.events]:  eta: 0:31:57  iter: 2899  total_loss: 4.507  loss_sem_seg: 2.36  loss_center: 0.8459  loss_offset: 1.199  time: 0.2706  data_time: 0.0251  lr: 0.0018371  max_mem: 6513M
[12/11 00:09:53 d2.utils.events]:  eta: 0:31:51  iter: 2919  total_loss: 4.788  loss_sem_seg: 2.597  loss_center: 0.6007  loss_offset: 1.426  time: 0.2705  data_time: 0.0250  lr: 0.0018324  max_mem: 6513M
[12/11 00:09:59 d2.utils.events]:  eta: 0:31:46  iter: 2939  total_loss: 4.892  loss_sem_seg: 2.658  loss_center: 0.5957  loss_offset: 1.537  time: 0.2706  data_time: 0.0263  lr: 0.0018278  max_mem: 6513M
[12/11 00:10:04 d2.utils.events]:  eta: 0:31:41  iter: 2959  total_loss: 4.698  loss_sem_seg: 2.702  loss_center: 0.8145  loss_offset: 1.36  time: 0.2706  data_time: 0.0270  lr: 0.0018231  max_mem: 6513M
[12/11 00:10:09 d2.utils.events]:  eta: 0:31:35  iter: 2979  total_loss: 4.517  loss_sem_seg: 2.496  loss_center: 0.7389  loss_offset: 1.252  time: 0.2706  data_time: 0.0247  lr: 0.0018184  max_mem: 6513M
[12/11 00:10:15 d2.utils.events]:  eta: 0:31:30  iter: 2999  total_loss: 4.65  loss_sem_seg: 2.521  loss_center: 0.7035  loss_offset: 1.407  time: 0.2706  data_time: 0.0268  lr: 0.0018138  max_mem: 6513M
[12/11 00:10:20 d2.utils.events]:  eta: 0:31:25  iter: 3019  total_loss: 4.473  loss_sem_seg: 2.463  loss_center: 0.6339  loss_offset: 1.322  time: 0.2706  data_time: 0.0275  lr: 0.0018091  max_mem: 6513M
[12/11 00:10:26 d2.utils.events]:  eta: 0:31:19  iter: 3039  total_loss: 4.294  loss_sem_seg: 2.281  loss_center: 0.7048  loss_offset: 1.297  time: 0.2706  data_time: 0.0255  lr: 0.0018044  max_mem: 6513M
[12/11 00:10:31 d2.utils.events]:  eta: 0:31:14  iter: 3059  total_loss: 4.458  loss_sem_seg: 2.472  loss_center: 0.7663  loss_offset: 1.299  time: 0.2706  data_time: 0.0258  lr: 0.0017998  max_mem: 6513M
[12/11 00:10:37 d2.utils.events]:  eta: 0:31:08  iter: 3079  total_loss: 4.549  loss_sem_seg: 2.25  loss_center: 0.7056  loss_offset: 1.472  time: 0.2706  data_time: 0.0241  lr: 0.0017951  max_mem: 6513M
[12/11 00:10:42 d2.utils.events]:  eta: 0:31:03  iter: 3099  total_loss: 4.704  loss_sem_seg: 2.618  loss_center: 0.6417  loss_offset: 1.223  time: 0.2706  data_time: 0.0262  lr: 0.0017904  max_mem: 6513M
[12/11 00:10:48 d2.utils.events]:  eta: 0:30:57  iter: 3119  total_loss: 4.788  loss_sem_seg: 2.447  loss_center: 0.697  loss_offset: 1.309  time: 0.2706  data_time: 0.0269  lr: 0.0017858  max_mem: 6513M
[12/11 00:10:53 d2.utils.events]:  eta: 0:30:52  iter: 3139  total_loss: 4.363  loss_sem_seg: 2.31  loss_center: 0.6889  loss_offset: 1.309  time: 0.2707  data_time: 0.0265  lr: 0.0017811  max_mem: 6513M
[12/11 00:10:58 d2.utils.events]:  eta: 0:30:46  iter: 3159  total_loss: 4.562  loss_sem_seg: 2.398  loss_center: 0.7629  loss_offset: 1.272  time: 0.2707  data_time: 0.0266  lr: 0.0017764  max_mem: 6513M
[12/11 00:11:04 d2.utils.events]:  eta: 0:30:41  iter: 3179  total_loss: 4.71  loss_sem_seg: 2.533  loss_center: 0.7427  loss_offset: 1.191  time: 0.2706  data_time: 0.0253  lr: 0.0017718  max_mem: 6513M
[12/11 00:11:09 d2.utils.events]:  eta: 0:30:36  iter: 3199  total_loss: 5.18  loss_sem_seg: 2.849  loss_center: 0.6837  loss_offset: 1.518  time: 0.2707  data_time: 0.0265  lr: 0.0017671  max_mem: 6513M
[12/11 00:11:15 d2.utils.events]:  eta: 0:30:30  iter: 3219  total_loss: 4.641  loss_sem_seg: 2.415  loss_center: 0.6704  loss_offset: 1.391  time: 0.2707  data_time: 0.0274  lr: 0.0017624  max_mem: 6513M
[12/11 00:11:20 d2.utils.events]:  eta: 0:30:25  iter: 3239  total_loss: 4.456  loss_sem_seg: 2.341  loss_center: 0.7718  loss_offset: 1.278  time: 0.2707  data_time: 0.0260  lr: 0.0017577  max_mem: 6513M
[12/11 00:11:26 d2.utils.events]:  eta: 0:30:19  iter: 3259  total_loss: 4.492  loss_sem_seg: 2.459  loss_center: 0.6342  loss_offset: 1.372  time: 0.2706  data_time: 0.0243  lr: 0.001753  max_mem: 6513M
[12/11 00:11:31 d2.utils.events]:  eta: 0:30:13  iter: 3279  total_loss: 4.637  loss_sem_seg: 2.468  loss_center: 0.7242  loss_offset: 1.231  time: 0.2707  data_time: 0.0252  lr: 0.0017484  max_mem: 6513M
[12/11 00:11:36 d2.utils.events]:  eta: 0:30:08  iter: 3299  total_loss: 4.612  loss_sem_seg: 2.361  loss_center: 0.6785  loss_offset: 1.403  time: 0.2707  data_time: 0.0246  lr: 0.0017437  max_mem: 6513M
[12/11 00:11:42 d2.utils.events]:  eta: 0:30:03  iter: 3319  total_loss: 4.627  loss_sem_seg: 2.459  loss_center: 0.7063  loss_offset: 1.326  time: 0.2707  data_time: 0.0267  lr: 0.001739  max_mem: 6513M
[12/11 00:11:47 d2.utils.events]:  eta: 0:29:57  iter: 3339  total_loss: 4.663  loss_sem_seg: 2.642  loss_center: 0.6355  loss_offset: 1.386  time: 0.2707  data_time: 0.0280  lr: 0.0017343  max_mem: 6513M
[12/11 00:11:53 d2.utils.events]:  eta: 0:29:52  iter: 3359  total_loss: 4.561  loss_sem_seg: 2.432  loss_center: 0.7028  loss_offset: 1.357  time: 0.2707  data_time: 0.0262  lr: 0.0017296  max_mem: 6513M
[12/11 00:11:58 d2.utils.events]:  eta: 0:29:47  iter: 3379  total_loss: 4.406  loss_sem_seg: 2.501  loss_center: 0.7067  loss_offset: 1.33  time: 0.2707  data_time: 0.0257  lr: 0.0017249  max_mem: 6513M
[12/11 00:12:04 d2.utils.events]:  eta: 0:29:41  iter: 3399  total_loss: 4.828  loss_sem_seg: 2.586  loss_center: 0.8583  loss_offset: 1.362  time: 0.2707  data_time: 0.0271  lr: 0.0017202  max_mem: 6513M
[12/11 00:12:09 d2.utils.events]:  eta: 0:29:36  iter: 3419  total_loss: 4.563  loss_sem_seg: 2.502  loss_center: 0.6759  loss_offset: 1.265  time: 0.2707  data_time: 0.0263  lr: 0.0017155  max_mem: 6513M
[12/11 00:12:15 d2.utils.events]:  eta: 0:29:30  iter: 3439  total_loss: 4.495  loss_sem_seg: 2.329  loss_center: 0.8364  loss_offset: 1.242  time: 0.2707  data_time: 0.0239  lr: 0.0017109  max_mem: 6513M
[12/11 00:12:20 d2.utils.events]:  eta: 0:29:24  iter: 3459  total_loss: 4.179  loss_sem_seg: 2.226  loss_center: 0.606  loss_offset: 1.193  time: 0.2707  data_time: 0.0266  lr: 0.0017062  max_mem: 6513M
[12/11 00:12:25 d2.utils.events]:  eta: 0:29:18  iter: 3479  total_loss: 4.451  loss_sem_seg: 2.239  loss_center: 0.7893  loss_offset: 1.301  time: 0.2707  data_time: 0.0257  lr: 0.0017015  max_mem: 6513M
[12/11 00:12:31 d2.utils.events]:  eta: 0:29:14  iter: 3499  total_loss: 4.482  loss_sem_seg: 2.477  loss_center: 0.7173  loss_offset: 1.291  time: 0.2707  data_time: 0.0273  lr: 0.0016968  max_mem: 6513M
[12/11 00:12:36 d2.utils.events]:  eta: 0:29:08  iter: 3519  total_loss: 4.723  loss_sem_seg: 2.572  loss_center: 0.7244  loss_offset: 1.473  time: 0.2707  data_time: 0.0273  lr: 0.0016921  max_mem: 6513M
[12/11 00:12:42 d2.utils.events]:  eta: 0:29:03  iter: 3539  total_loss: 4.345  loss_sem_seg: 1.995  loss_center: 0.6097  loss_offset: 1.452  time: 0.2707  data_time: 0.0263  lr: 0.0016874  max_mem: 6513M
[12/11 00:12:47 d2.utils.events]:  eta: 0:28:58  iter: 3559  total_loss: 4.21  loss_sem_seg: 2.218  loss_center: 0.6377  loss_offset: 1.328  time: 0.2707  data_time: 0.0254  lr: 0.0016827  max_mem: 6513M
[12/11 00:12:53 d2.utils.events]:  eta: 0:28:53  iter: 3579  total_loss: 4.312  loss_sem_seg: 2.375  loss_center: 0.656  loss_offset: 1.45  time: 0.2707  data_time: 0.0264  lr: 0.001678  max_mem: 6513M
[12/11 00:12:58 d2.utils.events]:  eta: 0:28:48  iter: 3599  total_loss: 4.529  loss_sem_seg: 2.513  loss_center: 0.7082  loss_offset: 1.224  time: 0.2707  data_time: 0.0260  lr: 0.0016733  max_mem: 6513M
[12/11 00:13:04 d2.utils.events]:  eta: 0:28:42  iter: 3619  total_loss: 4.545  loss_sem_seg: 2.3  loss_center: 0.8627  loss_offset: 1.18  time: 0.2707  data_time: 0.0268  lr: 0.0016686  max_mem: 6513M
[12/11 00:13:09 d2.utils.events]:  eta: 0:28:36  iter: 3639  total_loss: 4.201  loss_sem_seg: 2.439  loss_center: 0.5991  loss_offset: 1.312  time: 0.2707  data_time: 0.0236  lr: 0.0016638  max_mem: 6513M
[12/11 00:13:14 d2.utils.events]:  eta: 0:28:31  iter: 3659  total_loss: 4.523  loss_sem_seg: 2.416  loss_center: 0.7954  loss_offset: 1.206  time: 0.2707  data_time: 0.0273  lr: 0.0016591  max_mem: 6513M
[12/11 00:13:20 d2.utils.events]:  eta: 0:28:26  iter: 3679  total_loss: 4.473  loss_sem_seg: 2.257  loss_center: 0.707  loss_offset: 1.399  time: 0.2707  data_time: 0.0246  lr: 0.0016544  max_mem: 6513M
[12/11 00:13:25 d2.utils.events]:  eta: 0:28:20  iter: 3699  total_loss: 4.565  loss_sem_seg: 2.472  loss_center: 0.8469  loss_offset: 1.237  time: 0.2707  data_time: 0.0267  lr: 0.0016497  max_mem: 6513M
[12/11 00:13:31 d2.utils.events]:  eta: 0:28:15  iter: 3719  total_loss: 4.177  loss_sem_seg: 2.179  loss_center: 0.6722  loss_offset: 1.329  time: 0.2707  data_time: 0.0253  lr: 0.001645  max_mem: 6513M
[12/11 00:13:36 d2.utils.events]:  eta: 0:28:10  iter: 3739  total_loss: 4.801  loss_sem_seg: 2.465  loss_center: 0.5788  loss_offset: 1.539  time: 0.2707  data_time: 0.0249  lr: 0.0016403  max_mem: 6513M
[12/11 00:13:41 d2.utils.events]:  eta: 0:28:04  iter: 3759  total_loss: 4.573  loss_sem_seg: 2.329  loss_center: 0.6432  loss_offset: 1.567  time: 0.2707  data_time: 0.0269  lr: 0.0016356  max_mem: 6513M
[12/11 00:13:47 d2.utils.events]:  eta: 0:27:59  iter: 3779  total_loss: 4.293  loss_sem_seg: 2.214  loss_center: 0.6867  loss_offset: 1.307  time: 0.2707  data_time: 0.0285  lr: 0.0016309  max_mem: 6513M
[12/11 00:13:52 d2.utils.events]:  eta: 0:27:53  iter: 3799  total_loss: 4.584  loss_sem_seg: 2.414  loss_center: 0.8178  loss_offset: 1.296  time: 0.2707  data_time: 0.0246  lr: 0.0016261  max_mem: 6513M
[12/11 00:13:58 d2.utils.events]:  eta: 0:27:48  iter: 3819  total_loss: 4.375  loss_sem_seg: 2.288  loss_center: 0.7613  loss_offset: 1.319  time: 0.2707  data_time: 0.0256  lr: 0.0016214  max_mem: 6513M
[12/11 00:14:03 d2.utils.events]:  eta: 0:27:43  iter: 3839  total_loss: 4.685  loss_sem_seg: 2.486  loss_center: 0.5734  loss_offset: 1.217  time: 0.2707  data_time: 0.0251  lr: 0.0016167  max_mem: 6513M
[12/11 00:14:09 d2.utils.events]:  eta: 0:27:37  iter: 3859  total_loss: 4.295  loss_sem_seg: 2.139  loss_center: 0.6075  loss_offset: 1.205  time: 0.2707  data_time: 0.0251  lr: 0.001612  max_mem: 6513M
[12/11 00:14:14 d2.utils.events]:  eta: 0:27:33  iter: 3879  total_loss: 4.428  loss_sem_seg: 2.439  loss_center: 0.7989  loss_offset: 1.335  time: 0.2707  data_time: 0.0281  lr: 0.0016072  max_mem: 6513M
[12/11 00:14:19 d2.utils.events]:  eta: 0:27:28  iter: 3899  total_loss: 4.64  loss_sem_seg: 2.477  loss_center: 0.7003  loss_offset: 1.487  time: 0.2707  data_time: 0.0252  lr: 0.0016025  max_mem: 6513M
[12/11 00:14:25 d2.utils.events]:  eta: 0:27:23  iter: 3919  total_loss: 4.275  loss_sem_seg: 2.163  loss_center: 0.7008  loss_offset: 1.152  time: 0.2707  data_time: 0.0257  lr: 0.0015978  max_mem: 6513M
[12/11 00:14:30 d2.utils.events]:  eta: 0:27:17  iter: 3939  total_loss: 4.466  loss_sem_seg: 2.254  loss_center: 0.729  loss_offset: 1.34  time: 0.2707  data_time: 0.0252  lr: 0.0015931  max_mem: 6513M
[12/11 00:14:36 d2.utils.events]:  eta: 0:27:12  iter: 3959  total_loss: 4.531  loss_sem_seg: 2.385  loss_center: 0.6643  loss_offset: 1.418  time: 0.2707  data_time: 0.0269  lr: 0.0015883  max_mem: 6513M
[12/11 00:14:41 d2.utils.events]:  eta: 0:27:07  iter: 3979  total_loss: 4.195  loss_sem_seg: 2.089  loss_center: 0.6448  loss_offset: 1.304  time: 0.2707  data_time: 0.0256  lr: 0.0015836  max_mem: 6513M
[12/11 00:14:47 d2.utils.events]:  eta: 0:27:01  iter: 3999  total_loss: 4.429  loss_sem_seg: 2.332  loss_center: 0.673  loss_offset: 1.336  time: 0.2707  data_time: 0.0269  lr: 0.0015789  max_mem: 6513M
[12/11 00:14:52 d2.utils.events]:  eta: 0:26:56  iter: 4019  total_loss: 4.52  loss_sem_seg: 2.566  loss_center: 0.7223  loss_offset: 1.479  time: 0.2707  data_time: 0.0249  lr: 0.0015741  max_mem: 6513M
[12/11 00:14:57 d2.utils.events]:  eta: 0:26:50  iter: 4039  total_loss: 4.063  loss_sem_seg: 2.224  loss_center: 0.7029  loss_offset: 1.188  time: 0.2707  data_time: 0.0272  lr: 0.0015694  max_mem: 6513M
[12/11 00:15:03 d2.utils.events]:  eta: 0:26:44  iter: 4059  total_loss: 4.475  loss_sem_seg: 2.368  loss_center: 0.7376  loss_offset: 1.393  time: 0.2707  data_time: 0.0264  lr: 0.0015646  max_mem: 6513M
[12/11 00:15:08 d2.utils.events]:  eta: 0:26:40  iter: 4079  total_loss: 4.14  loss_sem_seg: 2.018  loss_center: 0.7769  loss_offset: 1.353  time: 0.2707  data_time: 0.0263  lr: 0.0015599  max_mem: 6513M
[12/11 00:15:14 d2.utils.events]:  eta: 0:26:34  iter: 4099  total_loss: 4.451  loss_sem_seg: 2.351  loss_center: 0.6919  loss_offset: 1.27  time: 0.2707  data_time: 0.0267  lr: 0.0015552  max_mem: 6513M
[12/11 00:15:19 d2.utils.events]:  eta: 0:26:29  iter: 4119  total_loss: 4.234  loss_sem_seg: 2.27  loss_center: 0.6186  loss_offset: 1.177  time: 0.2707  data_time: 0.0260  lr: 0.0015504  max_mem: 6513M
[12/11 00:15:25 d2.utils.events]:  eta: 0:26:24  iter: 4139  total_loss: 4.613  loss_sem_seg: 2.421  loss_center: 0.8032  loss_offset: 1.293  time: 0.2707  data_time: 0.0248  lr: 0.0015457  max_mem: 6513M
[12/11 00:15:30 d2.utils.events]:  eta: 0:26:18  iter: 4159  total_loss: 4.685  loss_sem_seg: 2.179  loss_center: 0.9042  loss_offset: 1.297  time: 0.2707  data_time: 0.0252  lr: 0.0015409  max_mem: 6513M
[12/11 00:15:35 d2.utils.events]:  eta: 0:26:13  iter: 4179  total_loss: 4.277  loss_sem_seg: 2.277  loss_center: 0.6269  loss_offset: 1.353  time: 0.2707  data_time: 0.0264  lr: 0.0015362  max_mem: 6513M
[12/11 00:15:41 d2.utils.events]:  eta: 0:26:07  iter: 4199  total_loss: 4.529  loss_sem_seg: 2.362  loss_center: 0.6484  loss_offset: 1.374  time: 0.2708  data_time: 0.0275  lr: 0.0015314  max_mem: 6513M
[12/11 00:15:46 d2.utils.events]:  eta: 0:26:02  iter: 4219  total_loss: 4.136  loss_sem_seg: 2.036  loss_center: 0.7524  loss_offset: 1.309  time: 0.2707  data_time: 0.0256  lr: 0.0015267  max_mem: 6513M
[12/11 00:15:52 d2.utils.events]:  eta: 0:25:57  iter: 4239  total_loss: 4.145  loss_sem_seg: 2.061  loss_center: 0.6783  loss_offset: 1.21  time: 0.2708  data_time: 0.0263  lr: 0.0015219  max_mem: 6513M
[12/11 00:15:57 d2.utils.events]:  eta: 0:25:54  iter: 4259  total_loss: 4.134  loss_sem_seg: 2.15  loss_center: 0.6331  loss_offset: 1.327  time: 0.2708  data_time: 0.0279  lr: 0.0015172  max_mem: 6513M
[12/11 00:16:03 d2.utils.events]:  eta: 0:25:48  iter: 4279  total_loss: 4.379  loss_sem_seg: 2.207  loss_center: 0.7903  loss_offset: 1.293  time: 0.2707  data_time: 0.0235  lr: 0.0015124  max_mem: 6513M
[12/11 00:16:08 d2.utils.events]:  eta: 0:25:43  iter: 4299  total_loss: 4.508  loss_sem_seg: 2.269  loss_center: 0.6383  loss_offset: 1.37  time: 0.2707  data_time: 0.0264  lr: 0.0015076  max_mem: 6513M
[12/11 00:16:13 d2.utils.events]:  eta: 0:25:38  iter: 4319  total_loss: 4.281  loss_sem_seg: 2.309  loss_center: 0.7414  loss_offset: 1.184  time: 0.2708  data_time: 0.0280  lr: 0.0015029  max_mem: 6513M
[12/11 00:16:19 d2.utils.events]:  eta: 0:25:32  iter: 4339  total_loss: 4.306  loss_sem_seg: 2.386  loss_center: 0.5437  loss_offset: 1.338  time: 0.2708  data_time: 0.0255  lr: 0.0014981  max_mem: 6513M
[12/11 00:16:24 d2.utils.events]:  eta: 0:25:27  iter: 4359  total_loss: 4.28  loss_sem_seg: 2.265  loss_center: 0.6669  loss_offset: 1.249  time: 0.2708  data_time: 0.0275  lr: 0.0014933  max_mem: 6513M
[12/11 00:16:30 d2.utils.events]:  eta: 0:25:21  iter: 4379  total_loss: 4.41  loss_sem_seg: 2.276  loss_center: 0.5579  loss_offset: 1.311  time: 0.2708  data_time: 0.0263  lr: 0.0014886  max_mem: 6513M
[12/11 00:16:35 d2.utils.events]:  eta: 0:25:16  iter: 4399  total_loss: 4.263  loss_sem_seg: 2.214  loss_center: 0.633  loss_offset: 1.303  time: 0.2708  data_time: 0.0258  lr: 0.0014838  max_mem: 6513M
[12/11 00:16:41 d2.utils.events]:  eta: 0:25:11  iter: 4419  total_loss: 4.701  loss_sem_seg: 2.235  loss_center: 0.7242  loss_offset: 1.339  time: 0.2708  data_time: 0.0250  lr: 0.001479  max_mem: 6513M
[12/11 00:16:46 d2.utils.events]:  eta: 0:25:05  iter: 4439  total_loss: 4.353  loss_sem_seg: 2.225  loss_center: 0.7221  loss_offset: 1.193  time: 0.2708  data_time: 0.0251  lr: 0.0014743  max_mem: 6513M
[12/11 00:16:52 d2.utils.events]:  eta: 0:25:00  iter: 4459  total_loss: 4.41  loss_sem_seg: 2.284  loss_center: 0.8328  loss_offset: 1.326  time: 0.2708  data_time: 0.0254  lr: 0.0014695  max_mem: 6513M
[12/11 00:16:57 d2.utils.events]:  eta: 0:24:55  iter: 4479  total_loss: 4.223  loss_sem_seg: 2.221  loss_center: 0.742  loss_offset: 1.163  time: 0.2708  data_time: 0.0268  lr: 0.0014647  max_mem: 6513M
[12/11 00:17:03 d2.utils.events]:  eta: 0:24:49  iter: 4499  total_loss: 4.255  loss_sem_seg: 2.141  loss_center: 0.6647  loss_offset: 1.242  time: 0.2708  data_time: 0.0255  lr: 0.0014599  max_mem: 6513M
[12/11 00:17:08 d2.utils.events]:  eta: 0:24:44  iter: 4519  total_loss: 4.159  loss_sem_seg: 2.042  loss_center: 0.6091  loss_offset: 1.328  time: 0.2708  data_time: 0.0263  lr: 0.0014552  max_mem: 6513M
[12/11 00:17:13 d2.utils.events]:  eta: 0:24:38  iter: 4539  total_loss: 4.22  loss_sem_seg: 2.415  loss_center: 0.5595  loss_offset: 1.283  time: 0.2708  data_time: 0.0278  lr: 0.0014504  max_mem: 6513M
[12/11 00:17:19 d2.utils.events]:  eta: 0:24:33  iter: 4559  total_loss: 4.597  loss_sem_seg: 2.392  loss_center: 0.7021  loss_offset: 1.37  time: 0.2708  data_time: 0.0263  lr: 0.0014456  max_mem: 6513M
[12/11 00:17:24 d2.utils.events]:  eta: 0:24:28  iter: 4579  total_loss: 4.239  loss_sem_seg: 2.217  loss_center: 0.6152  loss_offset: 1.413  time: 0.2708  data_time: 0.0265  lr: 0.0014408  max_mem: 6513M
[12/11 00:17:30 d2.utils.events]:  eta: 0:24:22  iter: 4599  total_loss: 4.471  loss_sem_seg: 2.333  loss_center: 0.6246  loss_offset: 1.451  time: 0.2708  data_time: 0.0257  lr: 0.001436  max_mem: 6513M
[12/11 00:17:35 d2.utils.events]:  eta: 0:24:17  iter: 4619  total_loss: 4.365  loss_sem_seg: 2.337  loss_center: 0.6503  loss_offset: 1.53  time: 0.2708  data_time: 0.0250  lr: 0.0014313  max_mem: 6513M
[12/11 00:17:40 d2.utils.events]:  eta: 0:24:13  iter: 4639  total_loss: 4.201  loss_sem_seg: 2.279  loss_center: 0.6336  loss_offset: 1.267  time: 0.2708  data_time: 0.0252  lr: 0.0014265  max_mem: 6513M
[12/11 00:17:46 d2.utils.events]:  eta: 0:24:07  iter: 4659  total_loss: 4.142  loss_sem_seg: 2.253  loss_center: 0.6482  loss_offset: 1.22  time: 0.2708  data_time: 0.0281  lr: 0.0014217  max_mem: 6513M
[12/11 00:17:51 d2.utils.events]:  eta: 0:24:02  iter: 4679  total_loss: 4.268  loss_sem_seg: 2.13  loss_center: 0.69  loss_offset: 1.434  time: 0.2708  data_time: 0.0263  lr: 0.0014169  max_mem: 6513M
[12/11 00:17:57 d2.utils.events]:  eta: 0:23:57  iter: 4699  total_loss: 4.159  loss_sem_seg: 2.14  loss_center: 0.909  loss_offset: 1.203  time: 0.2708  data_time: 0.0267  lr: 0.0014121  max_mem: 6513M
[12/11 00:18:02 d2.utils.events]:  eta: 0:23:51  iter: 4719  total_loss: 4.211  loss_sem_seg: 2.354  loss_center: 0.5369  loss_offset: 1.293  time: 0.2708  data_time: 0.0245  lr: 0.0014073  max_mem: 6513M
[12/11 00:18:08 d2.utils.events]:  eta: 0:23:46  iter: 4739  total_loss: 4.425  loss_sem_seg: 2.215  loss_center: 0.5702  loss_offset: 1.46  time: 0.2708  data_time: 0.0254  lr: 0.0014025  max_mem: 6513M
[12/11 00:18:13 d2.utils.events]:  eta: 0:23:41  iter: 4759  total_loss: 4.124  loss_sem_seg: 2.171  loss_center: 0.6196  loss_offset: 1.3  time: 0.2708  data_time: 0.0255  lr: 0.0013977  max_mem: 6513M
[12/11 00:18:19 d2.utils.events]:  eta: 0:23:35  iter: 4779  total_loss: 4.366  loss_sem_seg: 2.33  loss_center: 0.7276  loss_offset: 1.249  time: 0.2708  data_time: 0.0251  lr: 0.0013929  max_mem: 6513M
[12/11 00:18:24 d2.utils.events]:  eta: 0:23:30  iter: 4799  total_loss: 4.523  loss_sem_seg: 2.433  loss_center: 0.7904  loss_offset: 1.34  time: 0.2708  data_time: 0.0268  lr: 0.0013881  max_mem: 6513M
[12/11 00:18:29 d2.utils.events]:  eta: 0:23:25  iter: 4819  total_loss: 4.237  loss_sem_seg: 2.292  loss_center: 0.6617  loss_offset: 1.355  time: 0.2708  data_time: 0.0274  lr: 0.0013833  max_mem: 6513M
[12/11 00:18:35 d2.utils.events]:  eta: 0:23:19  iter: 4839  total_loss: 4.151  loss_sem_seg: 1.999  loss_center: 0.6681  loss_offset: 1.306  time: 0.2708  data_time: 0.0267  lr: 0.0013785  max_mem: 6513M
[12/11 00:18:40 d2.utils.events]:  eta: 0:23:14  iter: 4859  total_loss: 4.28  loss_sem_seg: 2.181  loss_center: 0.7797  loss_offset: 1.141  time: 0.2708  data_time: 0.0245  lr: 0.0013737  max_mem: 6513M
[12/11 00:18:46 d2.utils.events]:  eta: 0:23:08  iter: 4879  total_loss: 4.023  loss_sem_seg: 2.041  loss_center: 0.664  loss_offset: 1.105  time: 0.2708  data_time: 0.0255  lr: 0.0013689  max_mem: 6513M
[12/11 00:18:51 d2.utils.events]:  eta: 0:23:03  iter: 4899  total_loss: 4.032  loss_sem_seg: 2.195  loss_center: 0.6025  loss_offset: 1.196  time: 0.2708  data_time: 0.0265  lr: 0.001364  max_mem: 6513M
[12/11 00:18:57 d2.utils.events]:  eta: 0:22:58  iter: 4919  total_loss: 4.275  loss_sem_seg: 2.171  loss_center: 0.6746  loss_offset: 1.362  time: 0.2708  data_time: 0.0248  lr: 0.0013592  max_mem: 6513M
[12/11 00:19:02 d2.utils.events]:  eta: 0:22:52  iter: 4939  total_loss: 3.984  loss_sem_seg: 1.901  loss_center: 0.6421  loss_offset: 1.282  time: 0.2708  data_time: 0.0267  lr: 0.0013544  max_mem: 6513M
[12/11 00:19:07 d2.utils.events]:  eta: 0:22:47  iter: 4959  total_loss: 4.189  loss_sem_seg: 2.328  loss_center: 0.7538  loss_offset: 1.174  time: 0.2708  data_time: 0.0283  lr: 0.0013496  max_mem: 6513M
[12/11 00:19:13 d2.utils.events]:  eta: 0:22:41  iter: 4979  total_loss: 4.171  loss_sem_seg: 2.134  loss_center: 0.9406  loss_offset: 1.147  time: 0.2708  data_time: 0.0251  lr: 0.0013448  max_mem: 6513M
[12/11 00:19:18 fvcore.common.checkpoint]: Saving checkpoint to ./output/model_0004999.pth
[12/11 00:19:19 d2.utils.events]:  eta: 0:22:36  iter: 4999  total_loss: 4.345  loss_sem_seg: 2.064  loss_center: 0.7961  loss_offset: 1.323  time: 0.2708  data_time: 0.0262  lr: 0.00134  max_mem: 6513M
[12/11 00:19:25 d2.utils.events]:  eta: 0:22:30  iter: 5019  total_loss: 4.192  loss_sem_seg: 2.039  loss_center: 0.8079  loss_offset: 1.334  time: 0.2709  data_time: 0.0282  lr: 0.0013351  max_mem: 6513M
[12/11 00:19:30 d2.utils.events]:  eta: 0:22:26  iter: 5039  total_loss: 4.487  loss_sem_seg: 2.188  loss_center: 0.7714  loss_offset: 1.277  time: 0.2709  data_time: 0.0276  lr: 0.0013303  max_mem: 6513M
[12/11 00:19:35 d2.utils.events]:  eta: 0:22:20  iter: 5059  total_loss: 4.143  loss_sem_seg: 2.074  loss_center: 0.7528  loss_offset: 1.236  time: 0.2709  data_time: 0.0249  lr: 0.0013255  max_mem: 6513M
[12/11 00:19:41 d2.utils.events]:  eta: 0:22:14  iter: 5079  total_loss: 4.203  loss_sem_seg: 2.185  loss_center: 0.7409  loss_offset: 1.277  time: 0.2709  data_time: 0.0263  lr: 0.0013207  max_mem: 6513M
[12/11 00:19:46 d2.utils.events]:  eta: 0:22:09  iter: 5099  total_loss: 4.63  loss_sem_seg: 2.363  loss_center: 0.617  loss_offset: 1.522  time: 0.2709  data_time: 0.0274  lr: 0.0013158  max_mem: 6513M
[12/11 00:19:52 d2.utils.events]:  eta: 0:22:03  iter: 5119  total_loss: 4.465  loss_sem_seg: 2.132  loss_center: 0.606  loss_offset: 1.541  time: 0.2709  data_time: 0.0265  lr: 0.001311  max_mem: 6513M
[12/11 00:19:57 d2.utils.events]:  eta: 0:21:57  iter: 5139  total_loss: 4.08  loss_sem_seg: 1.99  loss_center: 0.6956  loss_offset: 1.266  time: 0.2709  data_time: 0.0259  lr: 0.0013062  max_mem: 6513M
[12/11 00:20:03 d2.utils.events]:  eta: 0:21:52  iter: 5159  total_loss: 4.068  loss_sem_seg: 1.999  loss_center: 0.6741  loss_offset: 1.323  time: 0.2709  data_time: 0.0270  lr: 0.0013013  max_mem: 6513M
[12/11 00:20:08 d2.utils.events]:  eta: 0:21:45  iter: 5179  total_loss: 4.161  loss_sem_seg: 1.919  loss_center: 0.6244  loss_offset: 1.436  time: 0.2709  data_time: 0.0272  lr: 0.0012965  max_mem: 6513M
[12/11 00:20:14 d2.utils.events]:  eta: 0:21:40  iter: 5199  total_loss: 4.111  loss_sem_seg: 2.106  loss_center: 0.7689  loss_offset: 1.158  time: 0.2709  data_time: 0.0275  lr: 0.0012916  max_mem: 6513M
[12/11 00:20:19 d2.utils.events]:  eta: 0:21:34  iter: 5219  total_loss: 4.443  loss_sem_seg: 2.187  loss_center: 0.7333  loss_offset: 1.389  time: 0.2709  data_time: 0.0257  lr: 0.0012868  max_mem: 6513M
[12/11 00:20:24 d2.utils.events]:  eta: 0:21:29  iter: 5239  total_loss: 4.243  loss_sem_seg: 2.177  loss_center: 0.5904  loss_offset: 1.321  time: 0.2709  data_time: 0.0263  lr: 0.0012819  max_mem: 6513M
[12/11 00:20:30 d2.utils.events]:  eta: 0:21:22  iter: 5259  total_loss: 4.112  loss_sem_seg: 2.196  loss_center: 0.6586  loss_offset: 1.461  time: 0.2709  data_time: 0.0263  lr: 0.0012771  max_mem: 6513M
[12/11 00:20:35 d2.utils.events]:  eta: 0:21:17  iter: 5279  total_loss: 4.256  loss_sem_seg: 2.153  loss_center: 0.6564  loss_offset: 1.24  time: 0.2709  data_time: 0.0265  lr: 0.0012722  max_mem: 6513M
[12/11 00:20:41 d2.utils.events]:  eta: 0:21:12  iter: 5299  total_loss: 4.046  loss_sem_seg: 1.984  loss_center: 0.7006  loss_offset: 1.035  time: 0.2709  data_time: 0.0258  lr: 0.0012674  max_mem: 6513M
[12/11 00:20:46 d2.utils.events]:  eta: 0:21:07  iter: 5319  total_loss: 3.647  loss_sem_seg: 1.875  loss_center: 0.6601  loss_offset: 1.167  time: 0.2709  data_time: 0.0255  lr: 0.0012625  max_mem: 6513M
[12/11 00:20:52 d2.utils.events]:  eta: 0:21:01  iter: 5339  total_loss: 4.241  loss_sem_seg: 2.06  loss_center: 0.7528  loss_offset: 1.192  time: 0.2709  data_time: 0.0260  lr: 0.0012577  max_mem: 6513M
[12/11 00:20:57 d2.utils.events]:  eta: 0:20:56  iter: 5359  total_loss: 4.227  loss_sem_seg: 2.125  loss_center: 0.677  loss_offset: 1.299  time: 0.2709  data_time: 0.0283  lr: 0.0012528  max_mem: 6513M
[12/11 00:21:03 d2.utils.events]:  eta: 0:20:51  iter: 5379  total_loss: 4.458  loss_sem_seg: 2.331  loss_center: 0.6406  loss_offset: 1.358  time: 0.2709  data_time: 0.0268  lr: 0.001248  max_mem: 6513M
[12/11 00:21:08 d2.utils.events]:  eta: 0:20:45  iter: 5399  total_loss: 3.983  loss_sem_seg: 2.102  loss_center: 0.5632  loss_offset: 1.23  time: 0.2709  data_time: 0.0248  lr: 0.0012431  max_mem: 6513M
[12/11 00:21:13 d2.utils.events]:  eta: 0:20:39  iter: 5419  total_loss: 4.213  loss_sem_seg: 2.27  loss_center: 0.6295  loss_offset: 1.287  time: 0.2709  data_time: 0.0257  lr: 0.0012382  max_mem: 6513M
[12/11 00:21:19 d2.utils.events]:  eta: 0:20:34  iter: 5439  total_loss: 4.254  loss_sem_seg: 2.232  loss_center: 0.7041  loss_offset: 1.273  time: 0.2709  data_time: 0.0263  lr: 0.0012334  max_mem: 6513M
[12/11 00:21:24 d2.utils.events]:  eta: 0:20:29  iter: 5459  total_loss: 4.213  loss_sem_seg: 2.147  loss_center: 0.7342  loss_offset: 1.23  time: 0.2709  data_time: 0.0262  lr: 0.0012285  max_mem: 6513M
[12/11 00:21:30 d2.utils.events]:  eta: 0:20:23  iter: 5479  total_loss: 4.154  loss_sem_seg: 2.321  loss_center: 0.5626  loss_offset: 1.239  time: 0.2709  data_time: 0.0264  lr: 0.0012236  max_mem: 6513M
[12/11 00:21:35 d2.utils.events]:  eta: 0:20:18  iter: 5499  total_loss: 4.252  loss_sem_seg: 2.066  loss_center: 0.8289  loss_offset: 1.245  time: 0.2709  data_time: 0.0270  lr: 0.0012188  max_mem: 6513M
[12/11 00:21:41 d2.utils.events]:  eta: 0:20:13  iter: 5519  total_loss: 4.31  loss_sem_seg: 2.211  loss_center: 0.7282  loss_offset: 1.4  time: 0.2709  data_time: 0.0260  lr: 0.0012139  max_mem: 6513M
[12/11 00:21:46 d2.utils.events]:  eta: 0:20:07  iter: 5539  total_loss: 4.335  loss_sem_seg: 2.151  loss_center: 0.8318  loss_offset: 1.156  time: 0.2709  data_time: 0.0249  lr: 0.001209  max_mem: 6513M
[12/11 00:21:52 d2.utils.events]:  eta: 0:20:02  iter: 5559  total_loss: 4.235  loss_sem_seg: 2.202  loss_center: 0.661  loss_offset: 1.248  time: 0.2709  data_time: 0.0273  lr: 0.0012041  max_mem: 6513M
[12/11 00:21:57 d2.utils.events]:  eta: 0:19:56  iter: 5579  total_loss: 4.462  loss_sem_seg: 2.357  loss_center: 0.6859  loss_offset: 1.369  time: 0.2709  data_time: 0.0284  lr: 0.0011992  max_mem: 6513M
[12/11 00:22:03 d2.utils.events]:  eta: 0:19:51  iter: 5599  total_loss: 4.249  loss_sem_seg: 2.081  loss_center: 0.6693  loss_offset: 1.302  time: 0.2710  data_time: 0.0262  lr: 0.0011944  max_mem: 6513M
[12/11 00:22:08 d2.utils.events]:  eta: 0:19:45  iter: 5619  total_loss: 4.202  loss_sem_seg: 1.887  loss_center: 0.7575  loss_offset: 1.2  time: 0.2709  data_time: 0.0257  lr: 0.0011895  max_mem: 6513M
[12/11 00:22:13 d2.utils.events]:  eta: 0:19:41  iter: 5639  total_loss: 4.155  loss_sem_seg: 2.202  loss_center: 0.6246  loss_offset: 1.329  time: 0.2710  data_time: 0.0271  lr: 0.0011846  max_mem: 6513M
[12/11 00:22:19 d2.utils.events]:  eta: 0:19:35  iter: 5659  total_loss: 4.211  loss_sem_seg: 2.053  loss_center: 0.5088  loss_offset: 1.383  time: 0.2710  data_time: 0.0251  lr: 0.0011797  max_mem: 6513M
[12/11 00:22:24 d2.utils.events]:  eta: 0:19:30  iter: 5679  total_loss: 3.977  loss_sem_seg: 1.84  loss_center: 0.7383  loss_offset: 1.307  time: 0.2710  data_time: 0.0273  lr: 0.0011748  max_mem: 6513M
[12/11 00:22:30 d2.utils.events]:  eta: 0:19:24  iter: 5699  total_loss: 3.986  loss_sem_seg: 2.126  loss_center: 0.7138  loss_offset: 1.363  time: 0.2710  data_time: 0.0256  lr: 0.0011699  max_mem: 6513M
[12/11 00:22:35 d2.utils.events]:  eta: 0:19:19  iter: 5719  total_loss: 4.223  loss_sem_seg: 2.089  loss_center: 0.6402  loss_offset: 1.262  time: 0.2710  data_time: 0.0268  lr: 0.001165  max_mem: 6513M
[12/11 00:22:41 d2.utils.events]:  eta: 0:19:14  iter: 5739  total_loss: 4.151  loss_sem_seg: 2.155  loss_center: 0.7378  loss_offset: 1.208  time: 0.2710  data_time: 0.0265  lr: 0.0011601  max_mem: 6513M
[12/11 00:22:46 d2.utils.events]:  eta: 0:19:09  iter: 5759  total_loss: 3.819  loss_sem_seg: 2.104  loss_center: 0.6715  loss_offset: 1.278  time: 0.2710  data_time: 0.0251  lr: 0.0011552  max_mem: 6513M
[12/11 00:22:52 d2.utils.events]:  eta: 0:19:04  iter: 5779  total_loss: 3.868  loss_sem_seg: 2.026  loss_center: 0.5754  loss_offset: 1.259  time: 0.2710  data_time: 0.0251  lr: 0.0011503  max_mem: 6513M
[12/11 00:22:57 d2.utils.events]:  eta: 0:18:58  iter: 5799  total_loss: 4.269  loss_sem_seg: 2.155  loss_center: 0.7308  loss_offset: 1.294  time: 0.2710  data_time: 0.0253  lr: 0.0011454  max_mem: 6513M
[12/11 00:23:02 d2.utils.events]:  eta: 0:18:53  iter: 5819  total_loss: 4.076  loss_sem_seg: 1.999  loss_center: 0.8051  loss_offset: 1.195  time: 0.2710  data_time: 0.0253  lr: 0.0011405  max_mem: 6513M
[12/11 00:23:08 d2.utils.events]:  eta: 0:18:47  iter: 5839  total_loss: 4.164  loss_sem_seg: 2.086  loss_center: 0.7929  loss_offset: 1.306  time: 0.2710  data_time: 0.0256  lr: 0.0011356  max_mem: 6513M
[12/11 00:23:13 d2.utils.events]:  eta: 0:18:41  iter: 5859  total_loss: 3.959  loss_sem_seg: 1.902  loss_center: 0.6843  loss_offset: 1.33  time: 0.2710  data_time: 0.0278  lr: 0.0011307  max_mem: 6513M
[12/11 00:23:19 d2.utils.events]:  eta: 0:18:37  iter: 5879  total_loss: 4.139  loss_sem_seg: 2.021  loss_center: 0.629  loss_offset: 1.43  time: 0.2710  data_time: 0.0264  lr: 0.0011258  max_mem: 6513M
[12/11 00:23:24 d2.utils.events]:  eta: 0:18:31  iter: 5899  total_loss: 3.849  loss_sem_seg: 1.937  loss_center: 0.6058  loss_offset: 1.367  time: 0.2710  data_time: 0.0251  lr: 0.0011208  max_mem: 6513M
[12/11 00:23:30 d2.utils.events]:  eta: 0:18:25  iter: 5919  total_loss: 4.168  loss_sem_seg: 1.918  loss_center: 0.6268  loss_offset: 1.201  time: 0.2710  data_time: 0.0256  lr: 0.0011159  max_mem: 6513M
[12/11 00:23:35 d2.utils.events]:  eta: 0:18:20  iter: 5939  total_loss: 4.222  loss_sem_seg: 2.163  loss_center: 0.6936  loss_offset: 1.4  time: 0.2710  data_time: 0.0271  lr: 0.001111  max_mem: 6513M
[12/11 00:23:41 d2.utils.events]:  eta: 0:18:15  iter: 5959  total_loss: 3.7  loss_sem_seg: 1.783  loss_center: 0.5971  loss_offset: 1.159  time: 0.2710  data_time: 0.0268  lr: 0.0011061  max_mem: 6513M
[12/11 00:23:46 d2.utils.events]:  eta: 0:18:09  iter: 5979  total_loss: 4.12  loss_sem_seg: 2.022  loss_center: 0.6517  loss_offset: 1.154  time: 0.2710  data_time: 0.0244  lr: 0.0011011  max_mem: 6513M
[12/11 00:23:52 d2.utils.events]:  eta: 0:18:04  iter: 5999  total_loss: 4.069  loss_sem_seg: 1.982  loss_center: 0.6969  loss_offset: 1.321  time: 0.2710  data_time: 0.0256  lr: 0.0010962  max_mem: 6513M
[12/11 00:23:57 d2.utils.events]:  eta: 0:17:59  iter: 6019  total_loss: 3.866  loss_sem_seg: 1.855  loss_center: 0.7083  loss_offset: 1.147  time: 0.2710  data_time: 0.0253  lr: 0.0010913  max_mem: 6513M
[12/11 00:24:02 d2.utils.events]:  eta: 0:17:53  iter: 6039  total_loss: 3.983  loss_sem_seg: 2.002  loss_center: 0.6815  loss_offset: 1.24  time: 0.2710  data_time: 0.0256  lr: 0.0010863  max_mem: 6513M
[12/11 00:24:08 d2.utils.events]:  eta: 0:17:48  iter: 6059  total_loss: 4.269  loss_sem_seg: 2.103  loss_center: 0.697  loss_offset: 1.477  time: 0.2710  data_time: 0.0279  lr: 0.0010814  max_mem: 6513M
[12/11 00:24:13 d2.utils.events]:  eta: 0:17:42  iter: 6079  total_loss: 4.183  loss_sem_seg: 2.084  loss_center: 0.7005  loss_offset: 1.284  time: 0.2710  data_time: 0.0264  lr: 0.0010765  max_mem: 6513M
[12/11 00:24:19 d2.utils.events]:  eta: 0:17:37  iter: 6099  total_loss: 4.232  loss_sem_seg: 2.166  loss_center: 0.6958  loss_offset: 1.267  time: 0.2710  data_time: 0.0270  lr: 0.0010715  max_mem: 6513M
[12/11 00:24:24 d2.utils.events]:  eta: 0:17:31  iter: 6119  total_loss: 3.875  loss_sem_seg: 1.989  loss_center: 0.7439  loss_offset: 1.103  time: 0.2710  data_time: 0.0270  lr: 0.0010666  max_mem: 6513M
[12/11 00:24:30 d2.utils.events]:  eta: 0:17:26  iter: 6139  total_loss: 4.225  loss_sem_seg: 2.183  loss_center: 0.7682  loss_offset: 1.268  time: 0.2710  data_time: 0.0254  lr: 0.0010616  max_mem: 6513M
[12/11 00:24:35 d2.utils.events]:  eta: 0:17:20  iter: 6159  total_loss: 4.055  loss_sem_seg: 2.012  loss_center: 0.7158  loss_offset: 1.304  time: 0.2710  data_time: 0.0287  lr: 0.0010567  max_mem: 6513M
[12/11 00:24:40 d2.utils.events]:  eta: 0:17:15  iter: 6179  total_loss: 4.018  loss_sem_seg: 2.021  loss_center: 0.6432  loss_offset: 1.44  time: 0.2710  data_time: 0.0260  lr: 0.0010517  max_mem: 6513M
[12/11 00:24:46 d2.utils.events]:  eta: 0:17:10  iter: 6199  total_loss: 4.15  loss_sem_seg: 2.13  loss_center: 0.6216  loss_offset: 1.275  time: 0.2710  data_time: 0.0260  lr: 0.0010468  max_mem: 6513M
[12/11 00:24:51 d2.utils.events]:  eta: 0:17:04  iter: 6219  total_loss: 4.165  loss_sem_seg: 2.202  loss_center: 0.7784  loss_offset: 1.143  time: 0.2710  data_time: 0.0257  lr: 0.0010418  max_mem: 6513M
[12/11 00:24:57 d2.utils.events]:  eta: 0:16:59  iter: 6239  total_loss: 3.938  loss_sem_seg: 2.198  loss_center: 0.5792  loss_offset: 1.314  time: 0.2710  data_time: 0.0264  lr: 0.0010368  max_mem: 6513M
[12/11 00:25:02 d2.utils.events]:  eta: 0:16:53  iter: 6259  total_loss: 4.015  loss_sem_seg: 1.995  loss_center: 0.5838  loss_offset: 1.141  time: 0.2710  data_time: 0.0262  lr: 0.0010319  max_mem: 6513M
[12/11 00:25:08 d2.utils.events]:  eta: 0:16:48  iter: 6279  total_loss: 3.874  loss_sem_seg: 2.003  loss_center: 0.7072  loss_offset: 1.297  time: 0.2710  data_time: 0.0238  lr: 0.0010269  max_mem: 6513M
[12/11 00:25:13 d2.utils.events]:  eta: 0:16:42  iter: 6299  total_loss: 4.072  loss_sem_seg: 2.018  loss_center: 0.7448  loss_offset: 1.217  time: 0.2710  data_time: 0.0263  lr: 0.0010219  max_mem: 6513M
[12/11 00:25:18 d2.utils.events]:  eta: 0:16:36  iter: 6319  total_loss: 3.835  loss_sem_seg: 1.835  loss_center: 0.5718  loss_offset: 1.336  time: 0.2710  data_time: 0.0247  lr: 0.001017  max_mem: 6513M
[12/11 00:25:24 d2.utils.events]:  eta: 0:16:31  iter: 6339  total_loss: 3.884  loss_sem_seg: 2.028  loss_center: 0.4992  loss_offset: 1.112  time: 0.2710  data_time: 0.0255  lr: 0.001012  max_mem: 6513M
[12/11 00:25:29 d2.utils.events]:  eta: 0:16:26  iter: 6359  total_loss: 3.906  loss_sem_seg: 2.01  loss_center: 0.6873  loss_offset: 1.164  time: 0.2710  data_time: 0.0255  lr: 0.001007  max_mem: 6513M
[12/11 00:25:35 d2.utils.events]:  eta: 0:16:20  iter: 6379  total_loss: 4.114  loss_sem_seg: 2.072  loss_center: 0.689  loss_offset: 1.131  time: 0.2710  data_time: 0.0259  lr: 0.001002  max_mem: 6513M
[12/11 00:25:40 d2.utils.events]:  eta: 0:16:15  iter: 6399  total_loss: 4.148  loss_sem_seg: 2.08  loss_center: 0.6992  loss_offset: 1.323  time: 0.2710  data_time: 0.0251  lr: 0.00099706  max_mem: 6513M
[12/11 00:25:46 d2.utils.events]:  eta: 0:16:09  iter: 6419  total_loss: 3.678  loss_sem_seg: 1.926  loss_center: 0.6924  loss_offset: 1.099  time: 0.2710  data_time: 0.0257  lr: 0.00099207  max_mem: 6513M
[12/11 00:25:51 d2.utils.events]:  eta: 0:16:04  iter: 6439  total_loss: 4.282  loss_sem_seg: 2.085  loss_center: 0.6196  loss_offset: 1.428  time: 0.2710  data_time: 0.0256  lr: 0.00098709  max_mem: 6513M
[12/11 00:25:56 d2.utils.events]:  eta: 0:15:58  iter: 6459  total_loss: 4.228  loss_sem_seg: 2.312  loss_center: 0.6134  loss_offset: 1.282  time: 0.2710  data_time: 0.0269  lr: 0.00098209  max_mem: 6513M
[12/11 00:26:02 d2.utils.events]:  eta: 0:15:53  iter: 6479  total_loss: 3.866  loss_sem_seg: 1.838  loss_center: 0.6817  loss_offset: 1.07  time: 0.2710  data_time: 0.0266  lr: 0.0009771  max_mem: 6513M
[12/11 00:26:07 d2.utils.events]:  eta: 0:15:47  iter: 6499  total_loss: 4.081  loss_sem_seg: 1.86  loss_center: 0.732  loss_offset: 1.162  time: 0.2710  data_time: 0.0256  lr: 0.0009721  max_mem: 6513M
[12/11 00:26:13 d2.utils.events]:  eta: 0:15:42  iter: 6519  total_loss: 4.038  loss_sem_seg: 2.192  loss_center: 0.6244  loss_offset: 1.251  time: 0.2710  data_time: 0.0272  lr: 0.00096711  max_mem: 6513M
[12/11 00:26:18 d2.utils.events]:  eta: 0:15:36  iter: 6539  total_loss: 3.969  loss_sem_seg: 2.046  loss_center: 0.6051  loss_offset: 1.157  time: 0.2710  data_time: 0.0265  lr: 0.0009621  max_mem: 6513M
[12/11 00:26:24 d2.utils.events]:  eta: 0:15:31  iter: 6559  total_loss: 3.915  loss_sem_seg: 1.895  loss_center: 0.5792  loss_offset: 1.517  time: 0.2710  data_time: 0.0263  lr: 0.0009571  max_mem: 6513M
[12/11 00:26:29 d2.utils.events]:  eta: 0:15:25  iter: 6579  total_loss: 3.731  loss_sem_seg: 1.898  loss_center: 0.6787  loss_offset: 1.106  time: 0.2710  data_time: 0.0255  lr: 0.00095209  max_mem: 6513M
[12/11 00:26:34 d2.utils.events]:  eta: 0:15:19  iter: 6599  total_loss: 3.905  loss_sem_seg: 1.731  loss_center: 0.7295  loss_offset: 1.147  time: 0.2710  data_time: 0.0251  lr: 0.00094708  max_mem: 6513M
[12/11 00:26:40 d2.utils.events]:  eta: 0:15:14  iter: 6619  total_loss: 4.009  loss_sem_seg: 1.966  loss_center: 0.6151  loss_offset: 1.273  time: 0.2710  data_time: 0.0263  lr: 0.00094206  max_mem: 6513M
[12/11 00:26:45 d2.utils.events]:  eta: 0:15:08  iter: 6639  total_loss: 3.948  loss_sem_seg: 1.978  loss_center: 0.6576  loss_offset: 1.166  time: 0.2710  data_time: 0.0282  lr: 0.00093705  max_mem: 6513M
[12/11 00:26:51 d2.utils.events]:  eta: 0:15:03  iter: 6659  total_loss: 3.857  loss_sem_seg: 1.972  loss_center: 0.5241  loss_offset: 1.189  time: 0.2710  data_time: 0.0258  lr: 0.00093203  max_mem: 6513M
[12/11 00:26:56 d2.utils.events]:  eta: 0:14:57  iter: 6679  total_loss: 4.093  loss_sem_seg: 1.918  loss_center: 0.7691  loss_offset: 1.213  time: 0.2710  data_time: 0.0252  lr: 0.000927  max_mem: 6513M
[12/11 00:27:02 d2.utils.events]:  eta: 0:14:51  iter: 6699  total_loss: 3.953  loss_sem_seg: 1.913  loss_center: 0.7729  loss_offset: 1.349  time: 0.2710  data_time: 0.0246  lr: 0.00092198  max_mem: 6513M
[12/11 00:27:07 d2.utils.events]:  eta: 0:14:46  iter: 6719  total_loss: 3.895  loss_sem_seg: 1.845  loss_center: 0.6024  loss_offset: 1.332  time: 0.2710  data_time: 0.0274  lr: 0.00091695  max_mem: 6513M
[12/11 00:27:12 d2.utils.events]:  eta: 0:14:40  iter: 6739  total_loss: 4.287  loss_sem_seg: 2.101  loss_center: 0.7259  loss_offset: 1.221  time: 0.2710  data_time: 0.0245  lr: 0.00091192  max_mem: 6513M
[12/11 00:27:18 d2.utils.events]:  eta: 0:14:35  iter: 6759  total_loss: 4.216  loss_sem_seg: 2.132  loss_center: 0.618  loss_offset: 1.438  time: 0.2710  data_time: 0.0266  lr: 0.00090688  max_mem: 6513M
[12/11 00:27:23 d2.utils.events]:  eta: 0:14:29  iter: 6779  total_loss: 4.051  loss_sem_seg: 2.077  loss_center: 0.6456  loss_offset: 1.255  time: 0.2710  data_time: 0.0251  lr: 0.00090184  max_mem: 6513M
[12/11 00:27:29 d2.utils.events]:  eta: 0:14:23  iter: 6799  total_loss: 4.033  loss_sem_seg: 2.093  loss_center: 0.5438  loss_offset: 1.23  time: 0.2710  data_time: 0.0238  lr: 0.0008968  max_mem: 6513M
[12/11 00:27:34 d2.utils.events]:  eta: 0:14:18  iter: 6819  total_loss: 4.067  loss_sem_seg: 2.041  loss_center: 0.7757  loss_offset: 1.173  time: 0.2710  data_time: 0.0249  lr: 0.00089176  max_mem: 6513M
[12/11 00:27:39 d2.utils.events]:  eta: 0:14:12  iter: 6839  total_loss: 3.985  loss_sem_seg: 1.924  loss_center: 0.8785  loss_offset: 1.219  time: 0.2710  data_time: 0.0271  lr: 0.00088671  max_mem: 6513M
[12/11 00:27:45 d2.utils.events]:  eta: 0:14:07  iter: 6859  total_loss: 3.757  loss_sem_seg: 1.665  loss_center: 0.69  loss_offset: 1.288  time: 0.2710  data_time: 0.0257  lr: 0.00088166  max_mem: 6513M
[12/11 00:27:50 d2.utils.events]:  eta: 0:14:01  iter: 6879  total_loss: 4.142  loss_sem_seg: 1.801  loss_center: 0.6954  loss_offset: 1.317  time: 0.2710  data_time: 0.0268  lr: 0.00087661  max_mem: 6513M
[12/11 00:27:56 d2.utils.events]:  eta: 0:13:56  iter: 6899  total_loss: 3.953  loss_sem_seg: 2.083  loss_center: 0.6551  loss_offset: 1.258  time: 0.2710  data_time: 0.0262  lr: 0.00087155  max_mem: 6513M
[12/11 00:28:01 d2.utils.events]:  eta: 0:13:51  iter: 6919  total_loss: 4.306  loss_sem_seg: 2.216  loss_center: 0.6056  loss_offset: 1.286  time: 0.2710  data_time: 0.0271  lr: 0.00086649  max_mem: 6513M
[12/11 00:28:07 d2.utils.events]:  eta: 0:13:46  iter: 6939  total_loss: 3.696  loss_sem_seg: 1.849  loss_center: 0.6103  loss_offset: 1.205  time: 0.2710  data_time: 0.0267  lr: 0.00086142  max_mem: 6513M
[12/11 00:28:12 d2.utils.events]:  eta: 0:13:40  iter: 6959  total_loss: 4.111  loss_sem_seg: 1.835  loss_center: 0.5311  loss_offset: 1.337  time: 0.2710  data_time: 0.0266  lr: 0.00085636  max_mem: 6513M
[12/11 00:28:18 d2.utils.events]:  eta: 0:13:35  iter: 6979  total_loss: 3.684  loss_sem_seg: 1.893  loss_center: 0.6232  loss_offset: 1.25  time: 0.2710  data_time: 0.0265  lr: 0.00085129  max_mem: 6513M
[12/11 00:28:23 d2.utils.events]:  eta: 0:13:29  iter: 6999  total_loss: 3.973  loss_sem_seg: 1.828  loss_center: 0.862  loss_offset: 1.294  time: 0.2710  data_time: 0.0244  lr: 0.00084621  max_mem: 6513M
[12/11 00:28:28 d2.utils.events]:  eta: 0:13:24  iter: 7019  total_loss: 3.92  loss_sem_seg: 1.829  loss_center: 0.8744  loss_offset: 1.169  time: 0.2710  data_time: 0.0255  lr: 0.00084114  max_mem: 6513M
[12/11 00:28:34 d2.utils.events]:  eta: 0:13:18  iter: 7039  total_loss: 4.122  loss_sem_seg: 2.218  loss_center: 0.5403  loss_offset: 1.363  time: 0.2710  data_time: 0.0264  lr: 0.00083605  max_mem: 6513M
[12/11 00:28:39 d2.utils.events]:  eta: 0:13:13  iter: 7059  total_loss: 3.812  loss_sem_seg: 1.917  loss_center: 0.6026  loss_offset: 1.12  time: 0.2710  data_time: 0.0263  lr: 0.00083097  max_mem: 6513M
[12/11 00:28:45 d2.utils.events]:  eta: 0:13:07  iter: 7079  total_loss: 4.093  loss_sem_seg: 1.873  loss_center: 0.6792  loss_offset: 1.584  time: 0.2710  data_time: 0.0247  lr: 0.00082588  max_mem: 6513M
[12/11 00:28:50 d2.utils.events]:  eta: 0:13:02  iter: 7099  total_loss: 3.996  loss_sem_seg: 2.031  loss_center: 0.6109  loss_offset: 1.243  time: 0.2710  data_time: 0.0281  lr: 0.00082079  max_mem: 6513M
[12/11 00:28:56 d2.utils.events]:  eta: 0:12:57  iter: 7119  total_loss: 3.81  loss_sem_seg: 1.821  loss_center: 0.5961  loss_offset: 1.364  time: 0.2710  data_time: 0.0265  lr: 0.0008157  max_mem: 6513M
[12/11 00:29:01 d2.utils.events]:  eta: 0:12:51  iter: 7139  total_loss: 3.802  loss_sem_seg: 2.108  loss_center: 0.7189  loss_offset: 1.243  time: 0.2710  data_time: 0.0249  lr: 0.0008106  max_mem: 6513M
[12/11 00:29:06 d2.utils.events]:  eta: 0:12:46  iter: 7159  total_loss: 3.965  loss_sem_seg: 1.88  loss_center: 0.8504  loss_offset: 1.17  time: 0.2710  data_time: 0.0266  lr: 0.0008055  max_mem: 6513M
[12/11 00:29:12 d2.utils.events]:  eta: 0:12:41  iter: 7179  total_loss: 3.902  loss_sem_seg: 1.848  loss_center: 0.7332  loss_offset: 1.043  time: 0.2710  data_time: 0.0267  lr: 0.00080039  max_mem: 6513M
[12/11 00:29:17 d2.utils.events]:  eta: 0:12:36  iter: 7199  total_loss: 4.026  loss_sem_seg: 2.036  loss_center: 0.6663  loss_offset: 1.25  time: 0.2710  data_time: 0.0271  lr: 0.00079528  max_mem: 6513M
[12/11 00:29:23 d2.utils.events]:  eta: 0:12:30  iter: 7219  total_loss: 4.272  loss_sem_seg: 2.153  loss_center: 0.5998  loss_offset: 1.224  time: 0.2710  data_time: 0.0258  lr: 0.00079017  max_mem: 6513M
[12/11 00:29:28 d2.utils.events]:  eta: 0:12:25  iter: 7239  total_loss: 4.024  loss_sem_seg: 1.879  loss_center: 0.7504  loss_offset: 1.201  time: 0.2710  data_time: 0.0250  lr: 0.00078505  max_mem: 6513M
[12/11 00:29:34 d2.utils.events]:  eta: 0:12:20  iter: 7259  total_loss: 4.062  loss_sem_seg: 2.086  loss_center: 0.5605  loss_offset: 1.233  time: 0.2710  data_time: 0.0260  lr: 0.00077993  max_mem: 6513M
[12/11 00:29:39 d2.utils.events]:  eta: 0:12:14  iter: 7279  total_loss: 3.798  loss_sem_seg: 1.932  loss_center: 0.7227  loss_offset: 1.309  time: 0.2710  data_time: 0.0256  lr: 0.00077481  max_mem: 6513M
[12/11 00:29:44 d2.utils.events]:  eta: 0:12:08  iter: 7299  total_loss: 4.028  loss_sem_seg: 2.121  loss_center: 0.5209  loss_offset: 1.314  time: 0.2710  data_time: 0.0235  lr: 0.00076968  max_mem: 6513M
[12/11 00:29:50 d2.utils.events]:  eta: 0:12:03  iter: 7319  total_loss: 3.77  loss_sem_seg: 1.878  loss_center: 0.5854  loss_offset: 1.238  time: 0.2710  data_time: 0.0278  lr: 0.00076455  max_mem: 6513M
[12/11 00:29:55 d2.utils.events]:  eta: 0:11:58  iter: 7339  total_loss: 3.936  loss_sem_seg: 2.022  loss_center: 0.8249  loss_offset: 1.271  time: 0.2710  data_time: 0.0255  lr: 0.00075942  max_mem: 6513M
[12/11 00:30:01 d2.utils.events]:  eta: 0:11:52  iter: 7359  total_loss: 4.235  loss_sem_seg: 2.284  loss_center: 0.4923  loss_offset: 1.471  time: 0.2710  data_time: 0.0270  lr: 0.00075428  max_mem: 6513M
[12/11 00:30:06 d2.utils.events]:  eta: 0:11:46  iter: 7379  total_loss: 3.942  loss_sem_seg: 1.782  loss_center: 0.5802  loss_offset: 1.482  time: 0.2710  data_time: 0.0246  lr: 0.00074914  max_mem: 6513M
[12/11 00:30:12 d2.utils.events]:  eta: 0:11:41  iter: 7399  total_loss: 3.979  loss_sem_seg: 1.983  loss_center: 0.7104  loss_offset: 1.19  time: 0.2710  data_time: 0.0267  lr: 0.00074399  max_mem: 6513M
[12/11 00:30:17 d2.utils.events]:  eta: 0:11:36  iter: 7419  total_loss: 3.956  loss_sem_seg: 1.973  loss_center: 0.6782  loss_offset: 1.339  time: 0.2710  data_time: 0.0240  lr: 0.00073884  max_mem: 6513M
[12/11 00:30:22 d2.utils.events]:  eta: 0:11:30  iter: 7439  total_loss: 3.806  loss_sem_seg: 1.771  loss_center: 0.6241  loss_offset: 1.206  time: 0.2710  data_time: 0.0246  lr: 0.00073368  max_mem: 6513M
[12/11 00:30:28 d2.utils.events]:  eta: 0:11:25  iter: 7459  total_loss: 3.728  loss_sem_seg: 2.138  loss_center: 0.6955  loss_offset: 1.042  time: 0.2710  data_time: 0.0258  lr: 0.00072852  max_mem: 6513M
[12/11 00:30:33 d2.utils.events]:  eta: 0:11:19  iter: 7479  total_loss: 4.026  loss_sem_seg: 1.934  loss_center: 0.7761  loss_offset: 1.072  time: 0.2710  data_time: 0.0250  lr: 0.00072336  max_mem: 6513M
[12/11 00:30:39 d2.utils.events]:  eta: 0:11:14  iter: 7499  total_loss: 4.093  loss_sem_seg: 2.095  loss_center: 0.7361  loss_offset: 1.317  time: 0.2710  data_time: 0.0249  lr: 0.00071819  max_mem: 6513M
[12/11 00:30:44 d2.utils.events]:  eta: 0:11:08  iter: 7519  total_loss: 3.975  loss_sem_seg: 1.844  loss_center: 0.72  loss_offset: 1.286  time: 0.2710  data_time: 0.0262  lr: 0.00071302  max_mem: 6513M
[12/11 00:30:49 d2.utils.events]:  eta: 0:11:03  iter: 7539  total_loss: 3.693  loss_sem_seg: 1.709  loss_center: 0.719  loss_offset: 1.267  time: 0.2710  data_time: 0.0244  lr: 0.00070785  max_mem: 6513M
[12/11 00:30:55 d2.utils.events]:  eta: 0:10:57  iter: 7559  total_loss: 3.916  loss_sem_seg: 1.768  loss_center: 0.66  loss_offset: 1.309  time: 0.2710  data_time: 0.0265  lr: 0.00070267  max_mem: 6513M
[12/11 00:31:00 d2.utils.events]:  eta: 0:10:52  iter: 7579  total_loss: 4.081  loss_sem_seg: 2.048  loss_center: 0.7606  loss_offset: 1.254  time: 0.2710  data_time: 0.0245  lr: 0.00069749  max_mem: 6513M
[12/11 00:31:06 d2.utils.events]:  eta: 0:10:46  iter: 7599  total_loss: 3.746  loss_sem_seg: 1.904  loss_center: 0.6054  loss_offset: 1.247  time: 0.2710  data_time: 0.0260  lr: 0.0006923  max_mem: 6513M
[12/11 00:31:11 d2.utils.events]:  eta: 0:10:41  iter: 7619  total_loss: 3.894  loss_sem_seg: 1.861  loss_center: 0.738  loss_offset: 1.217  time: 0.2710  data_time: 0.0255  lr: 0.00068711  max_mem: 6513M
[12/11 00:31:16 d2.utils.events]:  eta: 0:10:35  iter: 7639  total_loss: 4.142  loss_sem_seg: 2.081  loss_center: 0.5651  loss_offset: 1.45  time: 0.2710  data_time: 0.0263  lr: 0.00068191  max_mem: 6513M
[12/11 00:31:22 d2.utils.events]:  eta: 0:10:30  iter: 7659  total_loss: 3.536  loss_sem_seg: 1.598  loss_center: 0.5821  loss_offset: 1.199  time: 0.2710  data_time: 0.0248  lr: 0.00067671  max_mem: 6513M
[12/11 00:31:27 d2.utils.events]:  eta: 0:10:25  iter: 7679  total_loss: 3.798  loss_sem_seg: 1.786  loss_center: 0.5926  loss_offset: 1.166  time: 0.2710  data_time: 0.0271  lr: 0.0006715  max_mem: 6513M
[12/11 00:31:33 d2.utils.events]:  eta: 0:10:20  iter: 7699  total_loss: 3.943  loss_sem_seg: 1.746  loss_center: 0.6166  loss_offset: 1.335  time: 0.2710  data_time: 0.0254  lr: 0.00066629  max_mem: 6513M
[12/11 00:31:38 d2.utils.events]:  eta: 0:10:14  iter: 7719  total_loss: 3.973  loss_sem_seg: 1.853  loss_center: 0.6418  loss_offset: 1.263  time: 0.2710  data_time: 0.0258  lr: 0.00066108  max_mem: 6513M
[12/11 00:31:44 d2.utils.events]:  eta: 0:10:09  iter: 7739  total_loss: 3.94  loss_sem_seg: 1.867  loss_center: 0.8092  loss_offset: 1.202  time: 0.2710  data_time: 0.0258  lr: 0.00065586  max_mem: 6513M
[12/11 00:31:49 d2.utils.events]:  eta: 0:10:04  iter: 7759  total_loss: 4.084  loss_sem_seg: 1.934  loss_center: 0.6715  loss_offset: 1.291  time: 0.2710  data_time: 0.0257  lr: 0.00065064  max_mem: 6513M
[12/11 00:31:54 d2.utils.events]:  eta: 0:09:58  iter: 7779  total_loss: 4.072  loss_sem_seg: 2.051  loss_center: 0.6216  loss_offset: 1.212  time: 0.2710  data_time: 0.0247  lr: 0.00064541  max_mem: 6513M
[12/11 00:32:00 d2.utils.events]:  eta: 0:09:53  iter: 7799  total_loss: 3.959  loss_sem_seg: 2.018  loss_center: 0.6779  loss_offset: 1.304  time: 0.2710  data_time: 0.0260  lr: 0.00064017  max_mem: 6513M
[12/11 00:32:05 d2.utils.events]:  eta: 0:09:47  iter: 7819  total_loss: 3.64  loss_sem_seg: 1.717  loss_center: 0.6958  loss_offset: 1.242  time: 0.2710  data_time: 0.0244  lr: 0.00063494  max_mem: 6513M
[12/11 00:32:11 d2.utils.events]:  eta: 0:09:42  iter: 7839  total_loss: 3.533  loss_sem_seg: 1.803  loss_center: 0.6594  loss_offset: 1.14  time: 0.2710  data_time: 0.0251  lr: 0.00062969  max_mem: 6513M
[12/11 00:32:16 d2.utils.events]:  eta: 0:09:36  iter: 7859  total_loss: 3.769  loss_sem_seg: 1.747  loss_center: 0.7458  loss_offset: 1.24  time: 0.2710  data_time: 0.0256  lr: 0.00062445  max_mem: 6513M
[12/11 00:32:22 d2.utils.events]:  eta: 0:09:31  iter: 7879  total_loss: 3.694  loss_sem_seg: 1.968  loss_center: 0.6843  loss_offset: 1.142  time: 0.2710  data_time: 0.0257  lr: 0.00061919  max_mem: 6513M
[12/11 00:32:27 d2.utils.events]:  eta: 0:09:26  iter: 7899  total_loss: 3.73  loss_sem_seg: 1.75  loss_center: 0.6228  loss_offset: 1.161  time: 0.2709  data_time: 0.0240  lr: 0.00061394  max_mem: 6513M
[12/11 00:32:32 d2.utils.events]:  eta: 0:09:20  iter: 7919  total_loss: 4.144  loss_sem_seg: 1.9  loss_center: 0.8841  loss_offset: 1.093  time: 0.2710  data_time: 0.0251  lr: 0.00060867  max_mem: 6513M
[12/11 00:32:38 d2.utils.events]:  eta: 0:09:15  iter: 7939  total_loss: 3.723  loss_sem_seg: 2.111  loss_center: 0.7347  loss_offset: 1.18  time: 0.2709  data_time: 0.0241  lr: 0.00060341  max_mem: 6513M
[12/11 00:32:43 d2.utils.events]:  eta: 0:09:09  iter: 7959  total_loss: 3.902  loss_sem_seg: 1.903  loss_center: 0.6851  loss_offset: 1.288  time: 0.2709  data_time: 0.0248  lr: 0.00059813  max_mem: 6513M
[12/11 00:32:48 d2.utils.events]:  eta: 0:09:04  iter: 7979  total_loss: 3.951  loss_sem_seg: 1.902  loss_center: 0.7214  loss_offset: 1.332  time: 0.2709  data_time: 0.0245  lr: 0.00059286  max_mem: 6513M
[12/11 00:32:54 d2.utils.events]:  eta: 0:08:58  iter: 7999  total_loss: 3.843  loss_sem_seg: 1.78  loss_center: 0.7956  loss_offset: 1.186  time: 0.2709  data_time: 0.0256  lr: 0.00058757  max_mem: 6513M
[12/11 00:32:59 d2.utils.events]:  eta: 0:08:53  iter: 8019  total_loss: 3.818  loss_sem_seg: 1.741  loss_center: 0.7949  loss_offset: 1.174  time: 0.2709  data_time: 0.0260  lr: 0.00058229  max_mem: 6513M
[12/11 00:33:05 d2.utils.events]:  eta: 0:08:48  iter: 8039  total_loss: 3.963  loss_sem_seg: 1.95  loss_center: 0.6561  loss_offset: 1.256  time: 0.2709  data_time: 0.0260  lr: 0.00057699  max_mem: 6513M
[12/11 00:33:10 d2.utils.events]:  eta: 0:08:42  iter: 8059  total_loss: 4.001  loss_sem_seg: 1.886  loss_center: 0.6982  loss_offset: 1.408  time: 0.2709  data_time: 0.0251  lr: 0.00057169  max_mem: 6513M
[12/11 00:33:16 d2.utils.events]:  eta: 0:08:37  iter: 8079  total_loss: 4.29  loss_sem_seg: 1.972  loss_center: 0.6563  loss_offset: 1.378  time: 0.2709  data_time: 0.0253  lr: 0.00056639  max_mem: 6513M
[12/11 00:33:21 d2.utils.events]:  eta: 0:08:32  iter: 8099  total_loss: 3.993  loss_sem_seg: 2.023  loss_center: 0.5906  loss_offset: 1.297  time: 0.2709  data_time: 0.0255  lr: 0.00056108  max_mem: 6513M
[12/11 00:33:26 d2.utils.events]:  eta: 0:08:26  iter: 8119  total_loss: 3.992  loss_sem_seg: 1.798  loss_center: 0.8046  loss_offset: 1.105  time: 0.2709  data_time: 0.0254  lr: 0.00055576  max_mem: 6513M
[12/11 00:33:32 d2.utils.events]:  eta: 0:08:21  iter: 8139  total_loss: 3.889  loss_sem_seg: 1.786  loss_center: 0.8807  loss_offset: 1.368  time: 0.2709  data_time: 0.0232  lr: 0.00055044  max_mem: 6513M
[12/11 00:33:37 d2.utils.events]:  eta: 0:08:15  iter: 8159  total_loss: 3.983  loss_sem_seg: 1.943  loss_center: 0.6726  loss_offset: 1.35  time: 0.2709  data_time: 0.0263  lr: 0.00054512  max_mem: 6513M
[12/11 00:33:43 d2.utils.events]:  eta: 0:08:10  iter: 8179  total_loss: 4.023  loss_sem_seg: 1.823  loss_center: 0.7287  loss_offset: 1.271  time: 0.2709  data_time: 0.0256  lr: 0.00053978  max_mem: 6513M
[12/11 00:33:48 d2.utils.events]:  eta: 0:08:04  iter: 8199  total_loss: 3.799  loss_sem_seg: 1.911  loss_center: 0.7803  loss_offset: 1.317  time: 0.2709  data_time: 0.0251  lr: 0.00053444  max_mem: 6513M
[12/11 00:33:54 d2.utils.events]:  eta: 0:07:59  iter: 8219  total_loss: 3.821  loss_sem_seg: 1.852  loss_center: 0.7926  loss_offset: 1.236  time: 0.2709  data_time: 0.0278  lr: 0.0005291  max_mem: 6513M
[12/11 00:33:59 d2.utils.events]:  eta: 0:07:54  iter: 8239  total_loss: 3.922  loss_sem_seg: 1.732  loss_center: 0.633  loss_offset: 1.179  time: 0.2709  data_time: 0.0261  lr: 0.00052375  max_mem: 6513M
[12/11 00:34:04 d2.utils.events]:  eta: 0:07:48  iter: 8259  total_loss: 3.825  loss_sem_seg: 1.83  loss_center: 0.7345  loss_offset: 1.188  time: 0.2709  data_time: 0.0256  lr: 0.00051839  max_mem: 6513M
[12/11 00:34:10 d2.utils.events]:  eta: 0:07:43  iter: 8279  total_loss: 3.958  loss_sem_seg: 1.997  loss_center: 0.5472  loss_offset: 1.355  time: 0.2709  data_time: 0.0266  lr: 0.00051303  max_mem: 6513M
[12/11 00:34:15 d2.utils.events]:  eta: 0:07:38  iter: 8299  total_loss: 3.634  loss_sem_seg: 1.883  loss_center: 0.6488  loss_offset: 1.059  time: 0.2709  data_time: 0.0248  lr: 0.00050766  max_mem: 6513M
[12/11 00:34:21 d2.utils.events]:  eta: 0:07:32  iter: 8319  total_loss: 3.466  loss_sem_seg: 1.708  loss_center: 0.6199  loss_offset: 1.256  time: 0.2709  data_time: 0.0265  lr: 0.00050229  max_mem: 6513M
[12/11 00:34:26 d2.utils.events]:  eta: 0:07:27  iter: 8339  total_loss: 3.848  loss_sem_seg: 1.826  loss_center: 0.6371  loss_offset: 1.264  time: 0.2709  data_time: 0.0253  lr: 0.0004969  max_mem: 6513M
[12/11 00:34:32 d2.utils.events]:  eta: 0:07:21  iter: 8359  total_loss: 3.518  loss_sem_seg: 1.683  loss_center: 0.6322  loss_offset: 1.204  time: 0.2709  data_time: 0.0254  lr: 0.00049152  max_mem: 6513M
[12/11 00:34:37 d2.utils.events]:  eta: 0:07:16  iter: 8379  total_loss: 3.814  loss_sem_seg: 1.827  loss_center: 0.7465  loss_offset: 1.332  time: 0.2709  data_time: 0.0255  lr: 0.00048612  max_mem: 6513M
[12/11 00:34:42 d2.utils.events]:  eta: 0:07:10  iter: 8399  total_loss: 3.954  loss_sem_seg: 1.987  loss_center: 0.6746  loss_offset: 1.416  time: 0.2709  data_time: 0.0255  lr: 0.00048072  max_mem: 6513M
[12/11 00:34:48 d2.utils.events]:  eta: 0:07:05  iter: 8419  total_loss: 3.719  loss_sem_seg: 1.638  loss_center: 0.7304  loss_offset: 1.193  time: 0.2709  data_time: 0.0248  lr: 0.00047531  max_mem: 6513M
[12/11 00:34:53 d2.utils.events]:  eta: 0:07:00  iter: 8439  total_loss: 3.881  loss_sem_seg: 1.984  loss_center: 0.5849  loss_offset: 1.202  time: 0.2709  data_time: 0.0247  lr: 0.0004699  max_mem: 6513M
[12/11 00:34:59 d2.utils.events]:  eta: 0:06:55  iter: 8459  total_loss: 3.73  loss_sem_seg: 1.59  loss_center: 0.8891  loss_offset: 1.218  time: 0.2709  data_time: 0.0256  lr: 0.00046448  max_mem: 6513M
[12/11 00:35:04 d2.utils.events]:  eta: 0:06:49  iter: 8479  total_loss: 3.804  loss_sem_seg: 1.996  loss_center: 0.5549  loss_offset: 1.242  time: 0.2709  data_time: 0.0256  lr: 0.00045905  max_mem: 6513M
[12/11 00:35:09 d2.utils.events]:  eta: 0:06:44  iter: 8499  total_loss: 3.776  loss_sem_seg: 1.727  loss_center: 0.6424  loss_offset: 1.372  time: 0.2709  data_time: 0.0274  lr: 0.00045361  max_mem: 6513M
[12/11 00:35:15 d2.utils.events]:  eta: 0:06:39  iter: 8519  total_loss: 3.859  loss_sem_seg: 1.733  loss_center: 0.6389  loss_offset: 1.329  time: 0.2709  data_time: 0.0251  lr: 0.00044817  max_mem: 6513M
[12/11 00:35:20 d2.utils.events]:  eta: 0:06:33  iter: 8539  total_loss: 3.88  loss_sem_seg: 2.007  loss_center: 0.7114  loss_offset: 1.162  time: 0.2709  data_time: 0.0265  lr: 0.00044272  max_mem: 6513M
[12/11 00:35:26 d2.utils.events]:  eta: 0:06:28  iter: 8559  total_loss: 3.555  loss_sem_seg: 1.71  loss_center: 0.7998  loss_offset: 1.214  time: 0.2709  data_time: 0.0270  lr: 0.00043726  max_mem: 6513M
[12/11 00:35:31 d2.utils.events]:  eta: 0:06:22  iter: 8579  total_loss: 3.673  loss_sem_seg: 1.858  loss_center: 0.6751  loss_offset: 1.206  time: 0.2709  data_time: 0.0243  lr: 0.00043179  max_mem: 6513M
[12/11 00:35:37 d2.utils.events]:  eta: 0:06:17  iter: 8599  total_loss: 3.389  loss_sem_seg: 1.612  loss_center: 0.6161  loss_offset: 1.196  time: 0.2709  data_time: 0.0260  lr: 0.00042632  max_mem: 6513M
[12/11 00:35:42 d2.utils.events]:  eta: 0:06:12  iter: 8619  total_loss: 4.031  loss_sem_seg: 1.941  loss_center: 0.7453  loss_offset: 1.347  time: 0.2709  data_time: 0.0246  lr: 0.00042084  max_mem: 6513M
[12/11 00:35:47 d2.utils.events]:  eta: 0:06:07  iter: 8639  total_loss: 3.789  loss_sem_seg: 1.845  loss_center: 0.638  loss_offset: 1.296  time: 0.2709  data_time: 0.0274  lr: 0.00041535  max_mem: 6513M
[12/11 00:35:53 d2.utils.events]:  eta: 0:06:01  iter: 8659  total_loss: 3.77  loss_sem_seg: 1.742  loss_center: 0.7624  loss_offset: 1.233  time: 0.2709  data_time: 0.0258  lr: 0.00040985  max_mem: 6513M
[12/11 00:35:58 d2.utils.events]:  eta: 0:05:56  iter: 8679  total_loss: 3.798  loss_sem_seg: 1.685  loss_center: 0.8298  loss_offset: 1.289  time: 0.2709  data_time: 0.0258  lr: 0.00040435  max_mem: 6513M
[12/11 00:36:04 d2.utils.events]:  eta: 0:05:50  iter: 8699  total_loss: 4.055  loss_sem_seg: 2.048  loss_center: 0.7595  loss_offset: 1.242  time: 0.2709  data_time: 0.0263  lr: 0.00039883  max_mem: 6513M
[12/11 00:36:09 d2.utils.events]:  eta: 0:05:45  iter: 8719  total_loss: 3.625  loss_sem_seg: 1.831  loss_center: 0.5985  loss_offset: 1.117  time: 0.2709  data_time: 0.0262  lr: 0.00039331  max_mem: 6513M
[12/11 00:36:15 d2.utils.events]:  eta: 0:05:40  iter: 8739  total_loss: 3.81  loss_sem_seg: 1.769  loss_center: 0.6159  loss_offset: 1.346  time: 0.2709  data_time: 0.0254  lr: 0.00038778  max_mem: 6513M
[12/11 00:36:20 d2.utils.events]:  eta: 0:05:34  iter: 8759  total_loss: 4.084  loss_sem_seg: 1.84  loss_center: 0.6245  loss_offset: 1.29  time: 0.2709  data_time: 0.0236  lr: 0.00038224  max_mem: 6513M
[12/11 00:36:25 d2.utils.events]:  eta: 0:05:28  iter: 8779  total_loss: 3.694  loss_sem_seg: 1.742  loss_center: 0.6439  loss_offset: 1.263  time: 0.2709  data_time: 0.0235  lr: 0.00037669  max_mem: 6513M
[12/11 00:36:31 d2.utils.events]:  eta: 0:05:23  iter: 8799  total_loss: 4.07  loss_sem_seg: 1.962  loss_center: 0.6796  loss_offset: 1.303  time: 0.2709  data_time: 0.0282  lr: 0.00037113  max_mem: 6513M
[12/11 00:36:36 d2.utils.events]:  eta: 0:05:18  iter: 8819  total_loss: 3.838  loss_sem_seg: 1.807  loss_center: 0.5336  loss_offset: 1.285  time: 0.2709  data_time: 0.0252  lr: 0.00036557  max_mem: 6513M
[12/11 00:36:42 d2.utils.events]:  eta: 0:05:13  iter: 8839  total_loss: 3.958  loss_sem_seg: 1.846  loss_center: 0.68  loss_offset: 1.344  time: 0.2709  data_time: 0.0260  lr: 0.00035999  max_mem: 6513M
[12/11 00:36:47 d2.utils.events]:  eta: 0:05:07  iter: 8859  total_loss: 3.703  loss_sem_seg: 1.866  loss_center: 0.8062  loss_offset: 1.032  time: 0.2709  data_time: 0.0256  lr: 0.0003544  max_mem: 6513M
[12/11 00:36:52 d2.utils.events]:  eta: 0:05:02  iter: 8879  total_loss: 3.692  loss_sem_seg: 1.572  loss_center: 0.6954  loss_offset: 1.283  time: 0.2709  data_time: 0.0263  lr: 0.00034881  max_mem: 6513M
[12/11 00:36:58 d2.utils.events]:  eta: 0:04:56  iter: 8899  total_loss: 3.777  loss_sem_seg: 1.778  loss_center: 0.5911  loss_offset: 1.27  time: 0.2709  data_time: 0.0251  lr: 0.0003432  max_mem: 6513M
[12/11 00:37:03 d2.utils.events]:  eta: 0:04:51  iter: 8919  total_loss: 3.911  loss_sem_seg: 1.681  loss_center: 0.7979  loss_offset: 1.204  time: 0.2709  data_time: 0.0256  lr: 0.00033758  max_mem: 6513M
[12/11 00:37:09 d2.utils.events]:  eta: 0:04:46  iter: 8939  total_loss: 3.686  loss_sem_seg: 1.672  loss_center: 0.5616  loss_offset: 1.215  time: 0.2709  data_time: 0.0257  lr: 0.00033196  max_mem: 6513M
[12/11 00:37:14 d2.utils.events]:  eta: 0:04:40  iter: 8959  total_loss: 3.792  loss_sem_seg: 1.871  loss_center: 0.5698  loss_offset: 1.302  time: 0.2709  data_time: 0.0254  lr: 0.00032632  max_mem: 6513M
[12/11 00:37:20 d2.utils.events]:  eta: 0:04:35  iter: 8979  total_loss: 3.907  loss_sem_seg: 1.909  loss_center: 0.7293  loss_offset: 1.319  time: 0.2709  data_time: 0.0252  lr: 0.00032067  max_mem: 6513M
[12/11 00:37:25 d2.utils.events]:  eta: 0:04:29  iter: 8999  total_loss: 3.965  loss_sem_seg: 1.83  loss_center: 0.718  loss_offset: 1.292  time: 0.2709  data_time: 0.0257  lr: 0.00031501  max_mem: 6513M
[12/11 00:37:30 d2.utils.events]:  eta: 0:04:24  iter: 9019  total_loss: 3.893  loss_sem_seg: 1.895  loss_center: 0.7456  loss_offset: 1.224  time: 0.2709  data_time: 0.0231  lr: 0.00030934  max_mem: 6513M
[12/11 00:37:36 d2.utils.events]:  eta: 0:04:18  iter: 9039  total_loss: 3.498  loss_sem_seg: 1.846  loss_center: 0.7495  loss_offset: 1.055  time: 0.2709  data_time: 0.0250  lr: 0.00030366  max_mem: 6513M
[12/11 00:37:41 d2.utils.events]:  eta: 0:04:13  iter: 9059  total_loss: 3.601  loss_sem_seg: 1.748  loss_center: 0.4947  loss_offset: 1.317  time: 0.2709  data_time: 0.0257  lr: 0.00029797  max_mem: 6513M
[12/11 00:37:46 d2.utils.events]:  eta: 0:04:08  iter: 9079  total_loss: 3.748  loss_sem_seg: 1.777  loss_center: 0.6649  loss_offset: 1.226  time: 0.2709  data_time: 0.0246  lr: 0.00029226  max_mem: 6513M
[12/11 00:37:52 d2.utils.events]:  eta: 0:04:02  iter: 9099  total_loss: 3.53  loss_sem_seg: 1.525  loss_center: 0.6485  loss_offset: 1.249  time: 0.2709  data_time: 0.0263  lr: 0.00028654  max_mem: 6513M
[12/11 00:37:57 d2.utils.events]:  eta: 0:03:57  iter: 9119  total_loss: 3.699  loss_sem_seg: 1.758  loss_center: 0.603  loss_offset: 1.455  time: 0.2709  data_time: 0.0242  lr: 0.00028081  max_mem: 6513M
[12/11 00:38:03 d2.utils.events]:  eta: 0:03:52  iter: 9139  total_loss: 3.601  loss_sem_seg: 1.747  loss_center: 0.7392  loss_offset: 1.213  time: 0.2709  data_time: 0.0263  lr: 0.00027507  max_mem: 6513M
[12/11 00:38:08 d2.utils.events]:  eta: 0:03:46  iter: 9159  total_loss: 3.609  loss_sem_seg: 1.708  loss_center: 0.6575  loss_offset: 1.129  time: 0.2709  data_time: 0.0245  lr: 0.00026931  max_mem: 6513M
[12/11 00:38:13 d2.utils.events]:  eta: 0:03:41  iter: 9179  total_loss: 3.623  loss_sem_seg: 1.818  loss_center: 0.6802  loss_offset: 1.135  time: 0.2709  data_time: 0.0260  lr: 0.00026354  max_mem: 6513M
[12/11 00:38:19 d2.utils.events]:  eta: 0:03:35  iter: 9199  total_loss: 3.504  loss_sem_seg: 1.649  loss_center: 0.7033  loss_offset: 1.125  time: 0.2709  data_time: 0.0260  lr: 0.00025776  max_mem: 6513M
[12/11 00:38:24 d2.utils.events]:  eta: 0:03:30  iter: 9219  total_loss: 3.705  loss_sem_seg: 1.761  loss_center: 0.6595  loss_offset: 1.193  time: 0.2709  data_time: 0.0254  lr: 0.00025196  max_mem: 6513M
[12/11 00:38:30 d2.utils.events]:  eta: 0:03:24  iter: 9239  total_loss: 3.713  loss_sem_seg: 1.712  loss_center: 0.81  loss_offset: 1.156  time: 0.2709  data_time: 0.0257  lr: 0.00024614  max_mem: 6513M
[12/11 00:38:35 d2.utils.events]:  eta: 0:03:19  iter: 9259  total_loss: 3.469  loss_sem_seg: 1.522  loss_center: 0.744  loss_offset: 1.177  time: 0.2709  data_time: 0.0250  lr: 0.00024031  max_mem: 6513M
[12/11 00:38:41 d2.utils.events]:  eta: 0:03:14  iter: 9279  total_loss: 3.978  loss_sem_seg: 1.782  loss_center: 0.6281  loss_offset: 1.394  time: 0.2709  data_time: 0.0258  lr: 0.00023447  max_mem: 6513M
[12/11 00:38:46 d2.utils.events]:  eta: 0:03:08  iter: 9299  total_loss: 3.847  loss_sem_seg: 1.684  loss_center: 0.8282  loss_offset: 1.231  time: 0.2709  data_time: 0.0253  lr: 0.00022861  max_mem: 6513M
[12/11 00:38:51 d2.utils.events]:  eta: 0:03:03  iter: 9319  total_loss: 3.63  loss_sem_seg: 1.745  loss_center: 0.5889  loss_offset: 1.256  time: 0.2709  data_time: 0.0250  lr: 0.00022273  max_mem: 6513M
[12/11 00:38:57 d2.utils.events]:  eta: 0:02:57  iter: 9339  total_loss: 3.698  loss_sem_seg: 1.858  loss_center: 0.5795  loss_offset: 1.128  time: 0.2709  data_time: 0.0255  lr: 0.00021683  max_mem: 6513M
[12/11 00:39:02 d2.utils.events]:  eta: 0:02:52  iter: 9359  total_loss: 3.808  loss_sem_seg: 1.653  loss_center: 0.4628  loss_offset: 1.409  time: 0.2709  data_time: 0.0255  lr: 0.00021092  max_mem: 6513M
[12/11 00:39:08 d2.utils.events]:  eta: 0:02:47  iter: 9379  total_loss: 3.991  loss_sem_seg: 1.851  loss_center: 0.5977  loss_offset: 1.406  time: 0.2708  data_time: 0.0252  lr: 0.00020499  max_mem: 6513M
[12/11 00:39:13 d2.utils.events]:  eta: 0:02:41  iter: 9399  total_loss: 3.688  loss_sem_seg: 1.837  loss_center: 0.6597  loss_offset: 1.122  time: 0.2708  data_time: 0.0257  lr: 0.00019903  max_mem: 6513M
[12/11 00:39:18 d2.utils.events]:  eta: 0:02:36  iter: 9419  total_loss: 3.614  loss_sem_seg: 1.662  loss_center: 0.6672  loss_offset: 1.248  time: 0.2708  data_time: 0.0246  lr: 0.00019306  max_mem: 6513M
[12/11 00:39:24 d2.utils.events]:  eta: 0:02:31  iter: 9439  total_loss: 3.474  loss_sem_seg: 1.734  loss_center: 0.637  loss_offset: 1.156  time: 0.2708  data_time: 0.0264  lr: 0.00018707  max_mem: 6513M
[12/11 00:39:29 d2.utils.events]:  eta: 0:02:25  iter: 9459  total_loss: 3.629  loss_sem_seg: 1.689  loss_center: 0.6458  loss_offset: 1.176  time: 0.2708  data_time: 0.0255  lr: 0.00018106  max_mem: 6513M
[12/11 00:39:35 d2.utils.events]:  eta: 0:02:20  iter: 9479  total_loss: 3.583  loss_sem_seg: 1.643  loss_center: 0.7429  loss_offset: 1.186  time: 0.2708  data_time: 0.0255  lr: 0.00017502  max_mem: 6513M
[12/11 00:39:40 d2.utils.events]:  eta: 0:02:14  iter: 9499  total_loss: 3.618  loss_sem_seg: 1.601  loss_center: 0.6857  loss_offset: 1.172  time: 0.2708  data_time: 0.0245  lr: 0.00016896  max_mem: 6513M
[12/11 00:39:46 d2.utils.events]:  eta: 0:02:09  iter: 9519  total_loss: 3.863  loss_sem_seg: 1.767  loss_center: 0.7995  loss_offset: 1.298  time: 0.2708  data_time: 0.0281  lr: 0.00016288  max_mem: 6513M
[12/11 00:39:51 d2.utils.events]:  eta: 0:02:04  iter: 9539  total_loss: 3.615  loss_sem_seg: 1.576  loss_center: 0.6625  loss_offset: 1.302  time: 0.2708  data_time: 0.0265  lr: 0.00015677  max_mem: 6513M
[12/11 00:39:56 d2.utils.events]:  eta: 0:01:58  iter: 9559  total_loss: 3.608  loss_sem_seg: 1.805  loss_center: 0.5677  loss_offset: 1.425  time: 0.2708  data_time: 0.0264  lr: 0.00015064  max_mem: 6513M
[12/11 00:40:02 d2.utils.events]:  eta: 0:01:53  iter: 9579  total_loss: 3.7  loss_sem_seg: 1.683  loss_center: 0.6627  loss_offset: 1.114  time: 0.2708  data_time: 0.0255  lr: 0.00014448  max_mem: 6513M
[12/11 00:40:07 d2.utils.events]:  eta: 0:01:47  iter: 9599  total_loss: 3.543  loss_sem_seg: 1.642  loss_center: 0.5625  loss_offset: 1.229  time: 0.2708  data_time: 0.0231  lr: 0.00013828  max_mem: 6513M
[12/11 00:40:13 d2.utils.events]:  eta: 0:01:42  iter: 9619  total_loss: 3.881  loss_sem_seg: 1.901  loss_center: 0.7313  loss_offset: 1.241  time: 0.2708  data_time: 0.0242  lr: 0.00013206  max_mem: 6513M
[12/11 00:40:18 d2.utils.events]:  eta: 0:01:37  iter: 9639  total_loss: 3.562  loss_sem_seg: 1.632  loss_center: 0.5928  loss_offset: 1.19  time: 0.2708  data_time: 0.0249  lr: 0.0001258  max_mem: 6513M
[12/11 00:40:23 d2.utils.events]:  eta: 0:01:31  iter: 9659  total_loss: 3.468  loss_sem_seg: 1.568  loss_center: 0.5918  loss_offset: 1.192  time: 0.2708  data_time: 0.0260  lr: 0.00011951  max_mem: 6513M
[12/11 00:40:29 d2.utils.events]:  eta: 0:01:26  iter: 9679  total_loss: 3.456  loss_sem_seg: 1.608  loss_center: 0.7083  loss_offset: 1.066  time: 0.2708  data_time: 0.0247  lr: 0.00011319  max_mem: 6513M
[12/11 00:40:34 d2.utils.events]:  eta: 0:01:20  iter: 9699  total_loss: 3.586  loss_sem_seg: 1.7  loss_center: 0.693  loss_offset: 1.163  time: 0.2708  data_time: 0.0248  lr: 0.00010682  max_mem: 6513M
[12/11 00:40:40 d2.utils.events]:  eta: 0:01:15  iter: 9719  total_loss: 3.583  loss_sem_seg: 1.664  loss_center: 0.6741  loss_offset: 1.129  time: 0.2708  data_time: 0.0252  lr: 0.00010041  max_mem: 6513M
[12/11 00:40:45 d2.utils.events]:  eta: 0:01:10  iter: 9739  total_loss: 3.843  loss_sem_seg: 1.671  loss_center: 0.7679  loss_offset: 1.232  time: 0.2708  data_time: 0.0258  lr: 9.3954e-05  max_mem: 6513M
[12/11 00:40:50 d2.utils.events]:  eta: 0:01:04  iter: 9759  total_loss: 3.763  loss_sem_seg: 1.728  loss_center: 0.6595  loss_offset: 1.23  time: 0.2708  data_time: 0.0239  lr: 8.7449e-05  max_mem: 6513M
[12/11 00:40:56 d2.utils.events]:  eta: 0:00:59  iter: 9779  total_loss: 3.934  loss_sem_seg: 1.814  loss_center: 0.7975  loss_offset: 1.272  time: 0.2708  data_time: 0.0240  lr: 8.089e-05  max_mem: 6513M
[12/11 00:41:01 d2.utils.events]:  eta: 0:00:53  iter: 9799  total_loss: 3.817  loss_sem_seg: 1.657  loss_center: 0.6788  loss_offset: 1.267  time: 0.2708  data_time: 0.0242  lr: 7.4271e-05  max_mem: 6513M
[12/11 00:41:07 d2.utils.events]:  eta: 0:00:48  iter: 9819  total_loss: 3.768  loss_sem_seg: 1.688  loss_center: 0.6726  loss_offset: 1.235  time: 0.2708  data_time: 0.0271  lr: 6.7585e-05  max_mem: 6513M
[12/11 00:41:12 d2.utils.events]:  eta: 0:00:43  iter: 9839  total_loss: 3.947  loss_sem_seg: 1.853  loss_center: 0.6562  loss_offset: 1.263  time: 0.2708  data_time: 0.0255  lr: 6.0825e-05  max_mem: 6513M
[12/11 00:41:17 d2.utils.events]:  eta: 0:00:37  iter: 9859  total_loss: 3.601  loss_sem_seg: 1.453  loss_center: 0.8342  loss_offset: 1.272  time: 0.2708  data_time: 0.0265  lr: 5.3981e-05  max_mem: 6513M
[12/11 00:41:23 d2.utils.events]:  eta: 0:00:32  iter: 9879  total_loss: 3.859  loss_sem_seg: 1.708  loss_center: 0.5908  loss_offset: 1.35  time: 0.2708  data_time: 0.0254  lr: 4.7038e-05  max_mem: 6513M
[12/11 00:41:28 d2.utils.events]:  eta: 0:00:26  iter: 9899  total_loss: 3.699  loss_sem_seg: 1.868  loss_center: 0.6268  loss_offset: 1.26  time: 0.2708  data_time: 0.0248  lr: 3.9979e-05  max_mem: 6513M
[12/11 00:41:34 d2.utils.events]:  eta: 0:00:21  iter: 9919  total_loss: 3.704  loss_sem_seg: 1.798  loss_center: 0.598  loss_offset: 1.307  time: 0.2708  data_time: 0.0274  lr: 3.2778e-05  max_mem: 6513M
[12/11 00:41:39 d2.utils.events]:  eta: 0:00:16  iter: 9939  total_loss: 3.327  loss_sem_seg: 1.79  loss_center: 0.6931  loss_offset: 1.034  time: 0.2708  data_time: 0.0256  lr: 2.5394e-05  max_mem: 6513M
[12/11 00:41:45 d2.utils.events]:  eta: 0:00:10  iter: 9959  total_loss: 3.642  loss_sem_seg: 1.662  loss_center: 0.6482  loss_offset: 1.211  time: 0.2708  data_time: 0.0262  lr: 1.776e-05  max_mem: 6513M
[12/11 00:41:50 d2.utils.events]:  eta: 0:00:05  iter: 9979  total_loss: 3.577  loss_sem_seg: 1.632  loss_center: 0.6507  loss_offset: 1.281  time: 0.2708  data_time: 0.0258  lr: 9.7261e-06  max_mem: 6513M
[12/11 00:41:55 fvcore.common.checkpoint]: Saving checkpoint to ./output/model_0009999.pth
[12/11 00:41:56 fvcore.common.checkpoint]: Saving checkpoint to ./output/model_final.pth
[12/11 00:41:56 d2.utils.events]:  eta: 0:00:00  iter: 9999  total_loss: 3.666  loss_sem_seg: 1.625  loss_center: 0.8488  loss_offset: 1.209  time: 0.2708  data_time: 0.0254  lr: 6.2797e-07  max_mem: 6513M
[12/11 00:41:57 d2.engine.hooks]: Overall training speed: 9998 iterations in 0:45:07 (0.2708 s / it)
[12/11 00:41:57 d2.engine.hooks]: Total training time: 0:45:14 (0:00:07 on hooks)
[12/11 00:41:57 d2.data.dataset_mapper]: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(640, 640), max_size=640, sample_style='choice')]
[12/11 00:41:57 d2.data.common]: Serializing the dataset using: <class 'detectron2.data.common.NumpySerializedList'>
[12/11 00:41:57 d2.data.common]: Serializing 5000 elements to byte tensors and concatenating them all ...
[12/11 00:41:57 d2.data.common]: Serialized dataset takes 3.31 MiB
/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataloader.py:481: UserWarning: This DataLoader will create 10 worker processes in total. Our suggested max number of worker in current system is 8, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  cpuset_checked))
[12/11 00:41:58 d2.evaluation.evaluator]: Start inference on 5000 batches
/usr/local/lib/python3.7/dist-packages/torch/functional.py:445: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at  ../aten/src/ATen/native/TensorShape.cpp:2157.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
[12/11 00:42:00 d2.evaluation.evaluator]: Inference done 11/5000. Dataloading: 0.0010 s/iter. Inference: 0.0465 s/iter. Eval: 0.0321 s/iter. Total: 0.0796 s/iter. ETA=0:06:37
[12/11 00:42:05 d2.evaluation.evaluator]: Inference done 80/5000. Dataloading: 0.0010 s/iter. Inference: 0.0451 s/iter. Eval: 0.0279 s/iter. Total: 0.0740 s/iter. ETA=0:06:04
[12/11 00:42:10 d2.evaluation.evaluator]: Inference done 140/5000. Dataloading: 0.0010 s/iter. Inference: 0.0471 s/iter. Eval: 0.0300 s/iter. Total: 0.0782 s/iter. ETA=0:06:20
[12/11 00:42:15 d2.evaluation.evaluator]: Inference done 203/5000. Dataloading: 0.0010 s/iter. Inference: 0.0474 s/iter. Eval: 0.0304 s/iter. Total: 0.0789 s/iter. ETA=0:06:18
[12/11 00:42:20 d2.evaluation.evaluator]: Inference done 269/5000. Dataloading: 0.0011 s/iter. Inference: 0.0471 s/iter. Eval: 0.0301 s/iter. Total: 0.0784 s/iter. ETA=0:06:10
[12/11 00:42:25 d2.evaluation.evaluator]: Inference done 333/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0303 s/iter. Total: 0.0786 s/iter. ETA=0:06:06
[12/11 00:42:30 d2.evaluation.evaluator]: Inference done 398/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0302 s/iter. Total: 0.0785 s/iter. ETA=0:06:01
[12/11 00:42:35 d2.evaluation.evaluator]: Inference done 464/5000. Dataloading: 0.0011 s/iter. Inference: 0.0470 s/iter. Eval: 0.0300 s/iter. Total: 0.0781 s/iter. ETA=0:05:54
[12/11 00:42:40 d2.evaluation.evaluator]: Inference done 528/5000. Dataloading: 0.0011 s/iter. Inference: 0.0470 s/iter. Eval: 0.0300 s/iter. Total: 0.0782 s/iter. ETA=0:05:49
[12/11 00:42:45 d2.evaluation.evaluator]: Inference done 589/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0786 s/iter. ETA=0:05:46
[12/11 00:42:50 d2.evaluation.evaluator]: Inference done 651/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:05:42
[12/11 00:42:55 d2.evaluation.evaluator]: Inference done 715/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:05:37
[12/11 00:43:00 d2.evaluation.evaluator]: Inference done 779/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0304 s/iter. Total: 0.0788 s/iter. ETA=0:05:32
[12/11 00:43:05 d2.evaluation.evaluator]: Inference done 844/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:05:27
[12/11 00:43:10 d2.evaluation.evaluator]: Inference done 912/5000. Dataloading: 0.0011 s/iter. Inference: 0.0470 s/iter. Eval: 0.0302 s/iter. Total: 0.0783 s/iter. ETA=0:05:20
[12/11 00:43:15 d2.evaluation.evaluator]: Inference done 977/5000. Dataloading: 0.0011 s/iter. Inference: 0.0470 s/iter. Eval: 0.0302 s/iter. Total: 0.0783 s/iter. ETA=0:05:14
[12/11 00:43:20 d2.evaluation.evaluator]: Inference done 1037/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0786 s/iter. ETA=0:05:11
[12/11 00:43:25 d2.evaluation.evaluator]: Inference done 1103/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0301 s/iter. Total: 0.0785 s/iter. ETA=0:05:05
[12/11 00:43:30 d2.evaluation.evaluator]: Inference done 1166/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0301 s/iter. Total: 0.0786 s/iter. ETA=0:05:01
[12/11 00:43:36 d2.evaluation.evaluator]: Inference done 1228/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:04:56
[12/11 00:43:41 d2.evaluation.evaluator]: Inference done 1290/5000. Dataloading: 0.0011 s/iter. Inference: 0.0475 s/iter. Eval: 0.0302 s/iter. Total: 0.0788 s/iter. ETA=0:04:52
[12/11 00:43:46 d2.evaluation.evaluator]: Inference done 1356/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:04:46
[12/11 00:43:51 d2.evaluation.evaluator]: Inference done 1421/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:04:41
[12/11 00:43:56 d2.evaluation.evaluator]: Inference done 1484/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:04:36
[12/11 00:44:01 d2.evaluation.evaluator]: Inference done 1546/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:04:32
[12/11 00:44:06 d2.evaluation.evaluator]: Inference done 1607/5000. Dataloading: 0.0011 s/iter. Inference: 0.0475 s/iter. Eval: 0.0304 s/iter. Total: 0.0790 s/iter. ETA=0:04:27
[12/11 00:44:11 d2.evaluation.evaluator]: Inference done 1671/5000. Dataloading: 0.0011 s/iter. Inference: 0.0475 s/iter. Eval: 0.0303 s/iter. Total: 0.0789 s/iter. ETA=0:04:22
[12/11 00:44:16 d2.evaluation.evaluator]: Inference done 1735/5000. Dataloading: 0.0011 s/iter. Inference: 0.0475 s/iter. Eval: 0.0304 s/iter. Total: 0.0790 s/iter. ETA=0:04:17
[12/11 00:44:21 d2.evaluation.evaluator]: Inference done 1800/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0304 s/iter. Total: 0.0789 s/iter. ETA=0:04:12
[12/11 00:44:26 d2.evaluation.evaluator]: Inference done 1865/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0304 s/iter. Total: 0.0789 s/iter. ETA=0:04:07
[12/11 00:44:31 d2.evaluation.evaluator]: Inference done 1929/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0304 s/iter. Total: 0.0789 s/iter. ETA=0:04:02
[12/11 00:44:36 d2.evaluation.evaluator]: Inference done 1993/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0304 s/iter. Total: 0.0789 s/iter. ETA=0:03:57
[12/11 00:44:41 d2.evaluation.evaluator]: Inference done 2057/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0304 s/iter. Total: 0.0789 s/iter. ETA=0:03:52
[12/11 00:44:46 d2.evaluation.evaluator]: Inference done 2123/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:03:46
[12/11 00:44:51 d2.evaluation.evaluator]: Inference done 2187/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0304 s/iter. Total: 0.0788 s/iter. ETA=0:03:41
[12/11 00:44:56 d2.evaluation.evaluator]: Inference done 2253/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:03:36
[12/11 00:45:01 d2.evaluation.evaluator]: Inference done 2319/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:03:31
[12/11 00:45:06 d2.evaluation.evaluator]: Inference done 2383/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:03:26
[12/11 00:45:12 d2.evaluation.evaluator]: Inference done 2444/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:03:21
[12/11 00:45:17 d2.evaluation.evaluator]: Inference done 2509/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:03:16
[12/11 00:45:22 d2.evaluation.evaluator]: Inference done 2574/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:03:11
[12/11 00:45:27 d2.evaluation.evaluator]: Inference done 2636/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:03:06
[12/11 00:45:32 d2.evaluation.evaluator]: Inference done 2704/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:03:00
[12/11 00:45:37 d2.evaluation.evaluator]: Inference done 2771/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:02:55
[12/11 00:45:42 d2.evaluation.evaluator]: Inference done 2836/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0303 s/iter. Total: 0.0786 s/iter. ETA=0:02:50
[12/11 00:45:47 d2.evaluation.evaluator]: Inference done 2902/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0303 s/iter. Total: 0.0786 s/iter. ETA=0:02:44
[12/11 00:45:52 d2.evaluation.evaluator]: Inference done 2964/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:02:40
[12/11 00:45:57 d2.evaluation.evaluator]: Inference done 3031/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0302 s/iter. Total: 0.0786 s/iter. ETA=0:02:34
[12/11 00:46:02 d2.evaluation.evaluator]: Inference done 3098/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0302 s/iter. Total: 0.0785 s/iter. ETA=0:02:29
[12/11 00:46:07 d2.evaluation.evaluator]: Inference done 3159/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0302 s/iter. Total: 0.0786 s/iter. ETA=0:02:24
[12/11 00:46:12 d2.evaluation.evaluator]: Inference done 3223/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0302 s/iter. Total: 0.0786 s/iter. ETA=0:02:19
[12/11 00:46:17 d2.evaluation.evaluator]: Inference done 3287/5000. Dataloading: 0.0011 s/iter. Inference: 0.0472 s/iter. Eval: 0.0302 s/iter. Total: 0.0786 s/iter. ETA=0:02:14
[12/11 00:46:22 d2.evaluation.evaluator]: Inference done 3348/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:02:09
[12/11 00:46:27 d2.evaluation.evaluator]: Inference done 3411/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:02:05
[12/11 00:46:32 d2.evaluation.evaluator]: Inference done 3475/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:02:00
[12/11 00:46:37 d2.evaluation.evaluator]: Inference done 3540/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:01:54
[12/11 00:46:42 d2.evaluation.evaluator]: Inference done 3601/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:01:50
[12/11 00:46:47 d2.evaluation.evaluator]: Inference done 3667/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:01:44
[12/11 00:46:53 d2.evaluation.evaluator]: Inference done 3730/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:01:39
[12/11 00:46:58 d2.evaluation.evaluator]: Inference done 3792/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0303 s/iter. Total: 0.0788 s/iter. ETA=0:01:35
[12/11 00:47:03 d2.evaluation.evaluator]: Inference done 3858/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:01:29
[12/11 00:47:08 d2.evaluation.evaluator]: Inference done 3923/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:01:24
[12/11 00:47:13 d2.evaluation.evaluator]: Inference done 3988/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:01:19
[12/11 00:47:18 d2.evaluation.evaluator]: Inference done 4052/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:01:14
[12/11 00:47:23 d2.evaluation.evaluator]: Inference done 4116/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:01:09
[12/11 00:47:28 d2.evaluation.evaluator]: Inference done 4179/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0303 s/iter. Total: 0.0787 s/iter. ETA=0:01:04
[12/11 00:47:33 d2.evaluation.evaluator]: Inference done 4245/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:59
[12/11 00:47:38 d2.evaluation.evaluator]: Inference done 4308/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:54
[12/11 00:47:43 d2.evaluation.evaluator]: Inference done 4375/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:49
[12/11 00:47:48 d2.evaluation.evaluator]: Inference done 4437/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:44
[12/11 00:47:53 d2.evaluation.evaluator]: Inference done 4499/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:39
[12/11 00:47:58 d2.evaluation.evaluator]: Inference done 4562/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:34
[12/11 00:48:03 d2.evaluation.evaluator]: Inference done 4627/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:29
[12/11 00:48:08 d2.evaluation.evaluator]: Inference done 4691/5000. Dataloading: 0.0011 s/iter. Inference: 0.0474 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:24
[12/11 00:48:13 d2.evaluation.evaluator]: Inference done 4757/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:19
[12/11 00:48:18 d2.evaluation.evaluator]: Inference done 4822/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0787 s/iter. ETA=0:00:14
[12/11 00:48:23 d2.evaluation.evaluator]: Inference done 4890/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0786 s/iter. ETA=0:00:08
[12/11 00:48:28 d2.evaluation.evaluator]: Inference done 4955/5000. Dataloading: 0.0011 s/iter. Inference: 0.0473 s/iter. Eval: 0.0302 s/iter. Total: 0.0786 s/iter. ETA=0:00:03
[12/11 00:48:32 d2.evaluation.evaluator]: Total inference time: 0:06:32.678044 (0.078614 s / iter per device, on 1 devices)
[12/11 00:48:32 d2.evaluation.evaluator]: Total inference pure compute time: 0:03:56 (0.047280 s / iter per device, on 1 devices)
[12/11 00:48:32 d2.evaluation.panoptic_evaluation]: Writing all panoptic predictions to /tmp/panoptic_eval4oqqo57a ...
[12/11 00:48:54 d2.evaluation.panoptic_evaluation]: Panoptic Evaluation Results:
|        |  PQ   |   SQ   |  RQ   |  #categories  |
|:------:|:-----:|:------:|:-----:|:-------------:|
|  All   | 3.259 | 15.793 | 4.351 |      133      |
| Things | 0.758 | 11.997 | 1.168 |      80       |
| Stuff  | 7.035 | 21.523 | 9.154 |      53       |
[12/11 00:48:55 d2.evaluation.coco_evaluation]: Preparing results for COCO format ...
[12/11 00:48:55 d2.evaluation.coco_evaluation]: Saving results to ./output/inference/coco_instances_results.json
[12/11 00:48:55 d2.evaluation.coco_evaluation]: Evaluating predictions with unofficial COCO API...
Loading and preparing results...
DONE (t=0.02s)
creating index...
index created!
[12/11 00:48:55 d2.evaluation.fast_eval_api]: Evaluate annotation type *bbox*
[12/11 00:49:03 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 7.61 seconds.
[12/11 00:49:03 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[12/11 00:49:03 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.57 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.003
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.005
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.007
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.007
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.004
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.011
[12/11 00:49:03 d2.evaluation.coco_evaluation]: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.083 | 0.302  | 0.031  | 0.055 | 0.106 | 0.131 |
[12/11 00:49:03 d2.evaluation.coco_evaluation]: Per-category bbox AP: 
| category      | AP    | category     | AP    | category       | AP    |
|:--------------|:------|:-------------|:------|:---------------|:------|
| person        | 1.771 | bicycle      | 0.000 | car            | 0.121 |
| motorcycle    | 0.273 | airplane     | 0.109 | bus            | 0.209 |
| train         | 0.017 | truck        | 0.000 | boat           | 0.000 |
| traffic light | 0.000 | fire hydrant | 0.000 | stop sign      | 0.000 |
| parking meter | 0.000 | bench        | 0.000 | bird           | 0.000 |
| cat           | 1.038 | dog          | 0.557 | horse          | 0.000 |
| sheep         | 0.000 | cow          | 0.000 | elephant       | 1.677 |
| bear          | 0.000 | zebra        | 0.173 | giraffe        | 0.000 |
| backpack      | 0.000 | umbrella     | 0.000 | handbag        | 0.000 |
| tie           | 0.000 | suitcase     | 0.000 | frisbee        | 0.000 |
| skis          | 0.000 | snowboard    | 0.000 | sports ball    | 0.000 |
| kite          | 0.000 | baseball bat | 0.000 | baseball glove | 0.000 |
| skateboard    | 0.000 | surfboard    | 0.000 | tennis racket  | 0.000 |
| bottle        | 0.000 | wine glass   | 0.000 | cup            | 0.000 |
| fork          | 0.000 | knife        | 0.000 | spoon          | 0.000 |
| bowl          | 0.000 | banana       | 0.000 | apple          | 0.000 |
| sandwich      | 0.000 | orange       | 0.000 | broccoli       | 0.000 |
| carrot        | 0.000 | hot dog      | 0.000 | pizza          | 0.034 |
| donut         | 0.000 | cake         | 0.000 | chair          | 0.050 |
| couch         | 0.000 | potted plant | 0.000 | bed            | 0.434 |
| dining table  | 0.167 | toilet       | 0.024 | tv             | 0.000 |
| laptop        | 0.000 | mouse        | 0.000 | remote         | 0.000 |
| keyboard      | 0.000 | cell phone   | 0.000 | microwave      | 0.000 |
| oven          | 0.000 | toaster      | 0.000 | sink           | 0.000 |
| refrigerator  | 0.000 | book         | 0.000 | clock          | 0.000 |
| vase          | 0.000 | scissors     | 0.000 | teddy bear     | 0.000 |
| hair drier    | 0.000 | toothbrush   | 0.000 |                |       |
Loading and preparing results...
DONE (t=0.24s)
creating index...
index created!
[12/11 00:49:04 d2.evaluation.fast_eval_api]: Evaluate annotation type *segm*
[12/11 00:49:12 d2.evaluation.fast_eval_api]: COCOeval_opt.evaluate() finished in 8.31 seconds.
[12/11 00:49:12 d2.evaluation.fast_eval_api]: Accumulating evaluation results...
[12/11 00:49:13 d2.evaluation.fast_eval_api]: COCOeval_opt.accumulate() finished in 0.63 seconds.
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.002
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.001
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.002
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.004
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.005
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.005
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.001
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.002
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.008
[12/11 00:49:15 d2.evaluation.coco_evaluation]: Evaluation results for segm: 
|  AP   |  AP50  |  AP75  |  APs  |  APm  |  APl  |
|:-----:|:------:|:------:|:-----:|:-----:|:-----:|
| 0.060 | 0.229  | 0.013  | 0.044 | 0.080 | 0.165 |
[12/11 00:49:15 d2.evaluation.coco_evaluation]: Per-category segm AP: 
| category      | AP    | category     | AP    | category       | AP    |
|:--------------|:------|:-------------|:------|:---------------|:------|
| person        | 0.703 | bicycle      | 0.000 | car            | 0.111 |
| motorcycle    | 0.149 | airplane     | 0.085 | bus            | 0.217 |
| train         | 0.034 | truck        | 0.000 | boat           | 0.000 |
| traffic light | 0.000 | fire hydrant | 0.000 | stop sign      | 0.000 |
| parking meter | 0.000 | bench        | 0.000 | bird           | 0.000 |
| cat           | 0.581 | dog          | 0.912 | horse          | 0.000 |
| sheep         | 0.000 | cow          | 0.000 | elephant       | 1.499 |
| bear          | 0.000 | zebra        | 0.169 | giraffe        | 0.000 |
| backpack      | 0.000 | umbrella     | 0.000 | handbag        | 0.000 |
| tie           | 0.000 | suitcase     | 0.000 | frisbee        | 0.000 |
| skis          | 0.000 | snowboard    | 0.000 | sports ball    | 0.000 |
| kite          | 0.000 | baseball bat | 0.000 | baseball glove | 0.000 |
| skateboard    | 0.000 | surfboard    | 0.000 | tennis racket  | 0.000 |
| bottle        | 0.000 | wine glass   | 0.000 | cup            | 0.000 |
| fork          | 0.000 | knife        | 0.000 | spoon          | 0.000 |
| bowl          | 0.000 | banana       | 0.000 | apple          | 0.000 |
| sandwich      | 0.000 | orange       | 0.000 | broccoli       | 0.000 |
| carrot        | 0.000 | hot dog      | 0.000 | pizza          | 0.014 |
| donut         | 0.000 | cake         | 0.000 | chair          | 0.062 |
| couch         | 0.000 | potted plant | 0.000 | bed            | 0.216 |
| dining table  | 0.028 | toilet       | 0.017 | tv             | 0.000 |
| laptop        | 0.000 | mouse        | 0.000 | remote         | 0.000 |
| keyboard      | 0.000 | cell phone   | 0.000 | microwave      | 0.000 |
| oven          | 0.000 | toaster      | 0.000 | sink           | 0.000 |
| refrigerator  | 0.000 | book         | 0.000 | clock          | 0.000 |
| vase          | 0.000 | scissors     | 0.000 | teddy bear     | 0.000 |
| hair drier    | 0.000 | toothbrush   | 0.000 |                |       |
[12/11 00:49:20 d2.engine.defaults]: Evaluation results for coco_2017_val_panoptic in csv format:
[12/11 00:49:20 d2.evaluation.testing]: copypaste: Task: panoptic_seg
[12/11 00:49:20 d2.evaluation.testing]: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st
[12/11 00:49:20 d2.evaluation.testing]: copypaste: 3.2595,15.7931,4.3505,0.7580,11.9972,1.1680,7.0353,21.5229,9.1543
[12/11 00:49:20 d2.evaluation.testing]: copypaste: Task: bbox
[12/11 00:49:20 d2.evaluation.testing]: copypaste: AP,AP50,AP75,APs,APm,APl
[12/11 00:49:20 d2.evaluation.testing]: copypaste: 0.0832,0.3018,0.0307,0.0546,0.1063,0.1310
[12/11 00:49:20 d2.evaluation.testing]: copypaste: Task: segm
[12/11 00:49:20 d2.evaluation.testing]: copypaste: AP,AP50,AP75,APs,APm,APl
[12/11 00:49:20 d2.evaluation.testing]: copypaste: 0.0599,0.2288,0.0133,0.0443,0.0796,0.1649